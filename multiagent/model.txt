({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=34.370000000000005, nSimulations=17, avgReward=-397.8235294117648)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, pseudoWins=48.65999999999998, nSimulations=19, avgReward=-343.8947368421052)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=4.76, nSimulations=3, avgReward=-441.3333333333333)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=3.92, nSimulations=2, avgReward=-404.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=1.74, nSimulations=2, avgReward=-513.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=1, pseudoWins=36.129999999999995, nSimulations=16, avgReward=-374.1875)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, pseudoWins=14.639999999999999, nSimulations=3, avgReward=-112.0)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=8, pseudoWins=546.1299999999994, nSimulations=298, avgReward=-416.7348993288591)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, pseudoWins=101.22999999999999, nSimulations=54, avgReward=-412.5370370370371)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=2.12, nSimulations=2, avgReward=-494.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=5.99, nSimulations=2, avgReward=-300.5)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=5.82, nSimulations=4, avgReward=-454.5)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, pseudoWins=22.810000000000006, nSimulations=7, avgReward=-274.1428571428571)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=3.18, nSimulations=1, avgReward=-282.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=0.94, nSimulations=1, avgReward=-506.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=4, pseudoWins=168.02000000000007, nSimulations=96, avgReward=-424.97916666666686)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=9.47, nSimulations=6, avgReward=-442.1666666666667)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=75.4, nSimulations=61, avgReward=-476.3934426229507)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=2.38, nSimulations=2, avgReward=-481.0)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=12, pseudoWins=451.56999999999994, nSimulations=236, avgReward=-408.65677966101674)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=0.87, nSimulations=1, avgReward=-513.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=10, pseudoWins=251.30000000000007, nSimulations=118, avgReward=-387.03389830508456)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=5.180000000000001, nSimulations=5, avgReward=-496.40000000000003)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=10, pseudoWins=361.80999999999983, nSimulations=186, avgReward=-405.4784946236559)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=1, pseudoWins=132.17000000000002, nSimulations=83, avgReward=-440.7590361445783)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=2, pseudoWins=49.870000000000005, nSimulations=25, avgReward=-403.35999999999996)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=2, pseudoWins=71.34, nSimulations=27, avgReward=-335.7777777777777)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=30.4, nSimulations=23, avgReward=-467.82608695652175)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=26, pseudoWins=903.5199999999995, nSimulations=432, avgReward=-390.86805555555554)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=14.379999999999999, nSimulations=7, avgReward=-394.57142857142867)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=11.440000000000001, nSimulations=8, avgReward=-457.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=9.67, nSimulations=5, avgReward=-406.6)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=2.35, nSimulations=2, avgReward=-482.5)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=10, pseudoWins=455.46000000000015, nSimulations=247, avgReward=-415.71659919028326)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=10.370000000000001, nSimulations=5, avgReward=-392.6)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=59.75, nSimulations=30, avgReward=-400.8333333333334)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=7, pseudoWins=476.57, nSimulations=200, avgReward=-363.07500000000016)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=25.410000000000004, nSimulations=19, avgReward=-466.2631578947367)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=1.7, nSimulations=1, avgReward=-430.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, pseudoWins=102.22000000000003, nSimulations=67, avgReward=-447.4328358208952)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=2, pseudoWins=410.79999999999995, nSimulations=228, avgReward=-420.16228070175407)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=3.21, nSimulations=1, avgReward=-279.0)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=14, pseudoWins=457.3000000000001, nSimulations=242, avgReward=-411.2066115702476)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=14, pseudoWins=937.7399999999996, nSimulations=458, avgReward=-395.9432314410477)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=6, pseudoWins=273.3299999999999, nSimulations=158, avgReward=-427.0063291139238)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=14.14, nSimulations=7, avgReward=-398.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=4.4, nSimulations=2, avgReward=-380.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=1, pseudoWins=138.22000000000003, nSimulations=75, avgReward=-417.32000000000005)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=2, pseudoWins=66.72, nSimulations=23, avgReward=-309.9130434782609)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=48.75, nSimulations=38, avgReward=-471.71052631578937)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=205.78, nSimulations=103, avgReward=-400.21359223300976)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, pseudoWins=77.62, nSimulations=46, avgReward=-432.13043478260875)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=8.68, nSimulations=5, avgReward=-426.40000000000003)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=1.96, nSimulations=2, avgReward=-502.0)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=26.439999999999998, nSimulations=28, avgReward=-505.57142857142856)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=7.92, nSimulations=5, avgReward=-441.6)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=3.66, nSimulations=1, avgReward=-234.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=63, pseudoWins=1540.1300000000012, nSimulations=566, avgReward=-327.8922261484097)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=61.34000000000001, nSimulations=34, avgReward=-419.58823529411774)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=1.05, nSimulations=1, avgReward=-495.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, pseudoWins=768.5799999999992, nSimulations=447, avgReward=-428.40044742729356)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=9.89, nSimulations=5, avgReward=-402.20000000000005)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=22.939999999999994, nSimulations=16, avgReward=-456.62499999999994)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=7.46, nSimulations=5, avgReward=-450.8)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=17.619999999999997, nSimulations=11, avgReward=-439.8181818181818)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=24.630000000000003, nSimulations=9, avgReward=-326.33333333333337)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=15.79, nSimulations=8, avgReward=-402.62500000000006)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=10.08, nSimulations=5, avgReward=-398.4)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=5, pseudoWins=198.82999999999996, nSimulations=97, avgReward=-396.6494845360827)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=10, pseudoWins=419.86000000000007, nSimulations=234, avgReward=-420.57264957265)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=0.81, nSimulations=1, avgReward=-519.0)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=4, pseudoWins=324.74000000000007, nSimulations=144, avgReward=-375.29166666666646)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=4.16, nSimulations=4, avgReward=-496.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=17.57, nSimulations=11, avgReward=-440.27272727272725)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=3, pseudoWins=124.46000000000002, nSimulations=85, avgReward=-453.5764705882353)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=2, pseudoWins=61.08, nSimulations=25, avgReward=-355.67999999999995)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=47.39999999999999, nSimulations=34, avgReward=-460.5882352941178)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=24.8, nSimulations=28, avgReward=-511.4285714285714)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=20, pseudoWins=810.0099999999993, nSimulations=299, avgReward=-329.61872909699014)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, pseudoWins=35.519999999999996, nSimulations=17, avgReward=-391.0588235294117)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=2, pseudoWins=65.86, nSimulations=32, avgReward=-394.18750000000006)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=2, pseudoWins=26.92, nSimulations=4, avgReward=73.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=3.7, nSimulations=2, avgReward=-415.0)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=23.95, nSimulations=10, avgReward=-360.5)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=5.699999999999999, nSimulations=4, avgReward=-457.5)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=50.23, nSimulations=30, avgReward=-432.5666666666668)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=3, pseudoWins=137.85000000000002, nSimulations=51, avgReward=-329.7058823529411)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, pseudoWins=89.03999999999998, nSimulations=57, avgReward=-443.78947368421063)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=95.05, nSimulations=67, avgReward=-458.13432835820873)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=12.349999999999998, nSimulations=8, avgReward=-458.125)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=6, pseudoWins=2859.409999999997, nSimulations=1890, avgReward=-448.97989417989334)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=3, pseudoWins=134.34, nSimulations=86, avgReward=-443.7906976744182)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=31, pseudoWins=905.2999999999995, nSimulations=409, avgReward=-378.68215158924176)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=43.14999999999999, nSimulations=28, avgReward=-445.8928571428571)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=0.88, nSimulations=1, avgReward=-512.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=15.229999999999999, nSimulations=11, avgReward=-461.54545454545456)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=145.39999999999998, nSimulations=89, avgReward=-438.674157303371)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, pseudoWins=46.1, nSimulations=16, avgReward=-311.875)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, pseudoWins=87.23, nSimulations=64, avgReward=-463.92187499999966)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=1.0, nSimulations=1, avgReward=-500.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=22, pseudoWins=824.9599999999998, nSimulations=425, avgReward=-405.89176470588257)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=70.94999999999999, nSimulations=50, avgReward=-458.1)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=3.92, nSimulations=3, avgReward=-469.3333333333333)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=41.059999999999995, nSimulations=39, avgReward=-494.71794871794873)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=7, pseudoWins=544.0699999999999, nSimulations=219, avgReward=-352.13242009132404)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=2.97, nSimulations=1, avgReward=-303.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=282.2800000000001, nSimulations=155, avgReward=-418.32903225806444)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, pseudoWins=61.66, nSimulations=28, avgReward=-379.78571428571433)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=21.87, nSimulations=11, avgReward=-401.1818181818181)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=23, pseudoWins=742.36, nSimulations=380, avgReward=-404.66052631578924)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=4.49, nSimulations=5, avgReward=-510.20000000000005)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=1, pseudoWins=53.58, nSimulations=16, avgReward=-265.125)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=11.59, nSimulations=5, avgReward=-368.20000000000005)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=4.08, nSimulations=4, avgReward=-498.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=0.89, nSimulations=1, avgReward=-511.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=6.16, nSimulations=3, avgReward=-394.66666666666663)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=6.85, nSimulations=4, avgReward=-428.75)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=57.829999999999984, nSimulations=37, avgReward=-443.7027027027028)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=5, pseudoWins=191.31000000000003, nSimulations=98, avgReward=-404.78571428571456)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=1.02, nSimulations=1, avgReward=-498.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=2.02, nSimulations=2, avgReward=-499.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=18.5, nSimulations=8, avgReward=-368.75000000000006)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=12.43, nSimulations=7, avgReward=-422.4285714285715)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=1, pseudoWins=69.73999999999998, nSimulations=42, avgReward=-433.9523809523808)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=41.98, nSimulations=26, avgReward=-438.5384615384616)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=2.8, nSimulations=1, avgReward=-320.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=44.279999999999994, nSimulations=23, avgReward=-407.4782608695652)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=5, pseudoWins=151.02000000000004, nSimulations=72, avgReward=-390.80555555555554)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=12.91, nSimulations=8, avgReward=-438.62500000000006)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=6.01, nSimulations=4, avgReward=-449.75)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=4, pseudoWins=94.26, nSimulations=24, avgReward=-207.25)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=79.89999999999998, nSimulations=62, avgReward=-471.3709677419353)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=18.819999999999997, nSimulations=12, avgReward=-443.1666666666667)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=33.94, nSimulations=28, avgReward=-479.0357142857142)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=3.06, nSimulations=2, avgReward=-447.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=6.6899999999999995, nSimulations=4, avgReward=-432.75)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=32.599999999999994, nSimulations=20, avgReward=-437.00000000000006)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=60.02, nSimulations=44, avgReward=-463.590909090909)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=6, pseudoWins=326.21999999999997, nSimulations=186, avgReward=-424.6129032258063)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=9, pseudoWins=201.52999999999994, nSimulations=44, avgReward=-141.97727272727275)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=0.86, nSimulations=1, avgReward=-514.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=46.11999999999999, nSimulations=29, avgReward=-440.96551724137936)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=43, pseudoWins=4477.530000000002, nSimulations=2459, avgReward=-418.19479463196444)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=1.21, nSimulations=1, avgReward=-479.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=2.74, nSimulations=2, avgReward=-463.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=0.86, nSimulations=1, avgReward=-514.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=1.11, nSimulations=1, avgReward=-489.0)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=25.879999999999995, nSimulations=18, avgReward=-456.2222222222221)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=3, pseudoWins=102.41000000000001, nSimulations=54, avgReward=-410.3518518518519)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=2, pseudoWins=32.71, nSimulations=4, avgReward=217.75)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=9.54, nSimulations=5, avgReward=-409.20000000000005)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=108, pseudoWins=2643.6699999999987, nSimulations=1113, avgReward=-362.5345911949683)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=12.71, nSimulations=7, avgReward=-418.42857142857144)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=9.85, nSimulations=7, avgReward=-459.2857142857143)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=3.03, nSimulations=1, avgReward=-297.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=6.99, nSimulations=4, avgReward=-425.25)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=14.11, nSimulations=7, avgReward=-398.42857142857144)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=11.19, nSimulations=5, avgReward=-376.2)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=11, pseudoWins=551.2600000000004, nSimulations=321, avgReward=-428.26791277258593)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=12, pseudoWins=640.4800000000005, nSimulations=392, avgReward=-436.61224489795933)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=1.32, nSimulations=1, avgReward=-468.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=8, pseudoWins=456.4499999999997, nSimulations=205, avgReward=-377.84878048780496)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=5.529999999999999, nSimulations=4, avgReward=-461.75)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=11.25, nSimulations=8, avgReward=-459.37500000000006)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=15, pseudoWins=764.2000000000002, nSimulations=448, avgReward=-429.41964285714295)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=2, pseudoWins=119.13, nSimulations=47, avgReward=-347.191489361702)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=4.9399999999999995, nSimulations=4, avgReward=-476.5)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, pseudoWins=99.96, nSimulations=56, avgReward=-421.49999999999966)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=2, pseudoWins=123.99, nSimulations=82, avgReward=-449.1341463414634)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=30.169999999999995, nSimulations=16, avgReward=-411.43750000000006)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=167.76000000000002, nSimulations=84, avgReward=-400.9285714285715)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=4.27, nSimulations=2, avgReward=-386.5)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=228.42000000000007, nSimulations=127, avgReward=-420.38582677165385)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=2, pseudoWins=54.02, nSimulations=15, avgReward=-239.8666666666667)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=8.870000000000001, nSimulations=2, avgReward=-156.5)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=14, pseudoWins=610.7900000000002, nSimulations=349, avgReward=-425.0687679083097)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=3.0500000000000003, nSimulations=3, avgReward=-498.3333333333333)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=3.3099999999999996, nSimulations=3, avgReward=-489.66666666666663)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=168.51999999999992, nSimulations=81, avgReward=-393.0493827160495)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=31.190000000000005, nSimulations=38, avgReward=-518.5526315789473)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, pseudoWins=17.73, nSimulations=3, avgReward=-9.000000000000014)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=4.48, nSimulations=2, avgReward=-376.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=2, pseudoWins=772.9499999999995, nSimulations=447, avgReward=-427.6912751677853)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=6.66, nSimulations=3, avgReward=-377.99999999999994)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=519.8000000000003, nSimulations=284, avgReward=-417.26408450704196)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=1.2, nSimulations=1, avgReward=-480.0)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=49.76999999999999, nSimulations=34, avgReward=-453.6176470588236)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=15, pseudoWins=529.4800000000001, nSimulations=271, avgReward=-404.61992619926207)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=2, pseudoWins=58.28, nSimulations=26, avgReward=-375.8461538461538)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=8, pseudoWins=454.08999999999986, nSimulations=229, avgReward=-402.40174672489104)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=12.280000000000001, nSimulations=9, avgReward=-463.5555555555555)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=36.51, nSimulations=22, avgReward=-434.0454545454545)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=3, pseudoWins=79.25000000000001, nSimulations=38, avgReward=-391.4473684210525)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=12.010000000000002, nSimulations=9, avgReward=-466.55555555555543)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=141.89000000000001, nSimulations=84, avgReward=-431.45238095238085)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=1.04, nSimulations=1, avgReward=-496.0)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=41.4, nSimulations=23, avgReward=-420.00000000000006)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=1, pseudoWins=24.659999999999997, nSimulations=10, avgReward=-353.4)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=420.56, nSimulations=269, avgReward=-444.1226765799258)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=47.13000000000001, nSimulations=39, avgReward=-479.1538461538462)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=73.71000000000001, nSimulations=54, avgReward=-463.5)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=32.25000000000001, nSimulations=20, avgReward=-438.74999999999983)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=9.28, nSimulations=8, avgReward=-484.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=5, pseudoWins=127.05000000000001, nSimulations=56, avgReward=-373.12499999999983)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=21.799999999999997, nSimulations=13, avgReward=-432.3076923076924)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=20.72, nSimulations=13, avgReward=-440.61538461538464)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=17.569999999999997, nSimulations=15, avgReward=-482.8666666666666)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=27, pseudoWins=1784.8899999999992, nSimulations=726, avgReward=-354.6597796143258)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=7.16, nSimulations=7, avgReward=-497.7142857142857)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=2, pseudoWins=268.01, nSimulations=139, avgReward=-407.2877697841728)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=14.77, nSimulations=8, avgReward=-415.375)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=24, pseudoWins=673.1000000000005, nSimulations=283, avgReward=-362.1554770318021)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=3.27, nSimulations=3, avgReward=-491.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=13, pseudoWins=521.7699999999998, nSimulations=269, avgReward=-406.03345724907075)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=17, pseudoWins=561.7299999999998, nSimulations=297, avgReward=-410.9595959595964)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=6.69, nSimulations=4, avgReward=-432.75)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=49.48999999999998, nSimulations=38, avgReward=-469.7631578947368)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, pseudoWins=12.100000000000001, nSimulations=2, avgReward=5.0)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=6.02, nSimulations=4, avgReward=-449.5)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=7.39, nSimulations=5, avgReward=-452.20000000000005)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, pseudoWins=143.07, nSimulations=94, avgReward=-447.79787234042556)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=1.22, nSimulations=1, avgReward=-478.0)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, pseudoWins=90.02000000000002, nSimulations=37, avgReward=-359.94594594594594)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=175.44000000000003, nSimulations=129, avgReward=-464.2403100775194)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=8.57, nSimulations=5, avgReward=-428.6)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=5, pseudoWins=124.78, nSimulations=57, avgReward=-381.08771929824564)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=22, pseudoWins=761.6400000000001, nSimulations=238, avgReward=-280.0798319327733)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, pseudoWins=72.75, nSimulations=32, avgReward=-372.65624999999994)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=2.09, nSimulations=2, avgReward=-495.5)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=12.270000000000001, nSimulations=10, avgReward=-477.29999999999995)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=16, pseudoWins=535.9100000000002, nSimulations=265, avgReward=-397.9283018867928)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=2, pseudoWins=54.709999999999994, nSimulations=26, avgReward=-389.57692307692304)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=5, pseudoWins=181.97000000000003, nSimulations=101, avgReward=-419.83168316831706)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=1.19, nSimulations=1, avgReward=-481.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=2, pseudoWins=40.26, nSimulations=11, avgReward=-233.9999999999999)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=11, pseudoWins=817.6799999999998, nSimulations=423, avgReward=-407.03309692671417)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=1, pseudoWins=99.23999999999998, nSimulations=78, avgReward=-472.76923076923066)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=5, pseudoWins=92.65, nSimulations=15, avgReward=17.666666666666664)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=15, pseudoWins=647.5999999999997, nSimulations=344, avgReward=-411.7441860465118)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=83.05000000000003, nSimulations=60, avgReward=-461.58333333333326)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=11.38, nSimulations=5, avgReward=-372.40000000000003)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=217.62000000000003, nSimulations=140, avgReward=-444.55714285714305)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=8, pseudoWins=662.2100000000003, nSimulations=299, avgReward=-378.6822742474918)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=28.29, nSimulations=19, avgReward=-451.1052631578946)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=5.3100000000000005, nSimulations=3, avgReward=-423.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=2, pseudoWins=248.94000000000005, nSimulations=108, avgReward=-371.1203703703706)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=2.8200000000000003, nSimulations=3, avgReward=-506.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=2.2, nSimulations=2, avgReward=-490.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, pseudoWins=56.49000000000001, nSimulations=34, avgReward=-433.85294117647067)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=5, pseudoWins=183.27999999999992, nSimulations=94, avgReward=-405.3191489361703)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=11.42, nSimulations=7, avgReward=-436.8571428571429)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=25.959999999999994, nSimulations=14, avgReward=-414.57142857142856)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=2.97, nSimulations=1, avgReward=-303.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=4, pseudoWins=110.84, nSimulations=55, avgReward=-398.4727272727273)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=1, pseudoWins=47.449999999999996, nSimulations=28, avgReward=-430.53571428571433)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=7.8500000000000005, nSimulations=6, avgReward=-469.1666666666667)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=3, pseudoWins=126.40999999999998, nSimulations=65, avgReward=-405.52307692307676)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=10.809999999999999, nSimulations=9, avgReward=-479.88888888888886)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, pseudoWins=138.3, nSimulations=89, avgReward=-445.6067415730338)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=4.609999999999999, nSimulations=5, avgReward=-507.8)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=3.6700000000000004, nSimulations=3, avgReward=-477.66666666666663)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=2, pseudoWins=119.5, nSimulations=70, avgReward=-429.28571428571416)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=47, pseudoWins=1057.8400000000004, nSimulations=427, avgReward=-352.26229508196724)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=11.86, nSimulations=5, avgReward=-362.8)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=7.799999999999999, nSimulations=5, avgReward=-444.0)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=4, pseudoWins=145.55000000000004, nSimulations=79, avgReward=-415.7594936708861)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=51.62, nSimulations=37, avgReward=-460.48648648648657)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=56.279999999999994, nSimulations=34, avgReward=-434.47058823529414)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, pseudoWins=69.60999999999999, nSimulations=46, avgReward=-448.67391304347825)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=25.950000000000003, nSimulations=16, avgReward=-437.81249999999994)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=3, pseudoWins=107.93, nSimulations=33, avgReward=-272.9393939393939)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=145.57000000000002, nSimulations=81, avgReward=-422.06172839506195)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, pseudoWins=57.349999999999994, nSimulations=30, avgReward=-408.8333333333333)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=4.1000000000000005, nSimulations=2, avgReward=-395.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, pseudoWins=49.07, nSimulations=25, avgReward=-403.71999999999997)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=11.57, nSimulations=9, avgReward=-471.4444444444444)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=15, pseudoWins=538.21, nSimulations=270, avgReward=-400.8074074074074)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=1.1, nSimulations=1, avgReward=-490.0)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=91.82999999999997, nSimulations=70, avgReward=-468.81428571428575)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=27, pseudoWins=1443.4599999999996, nSimulations=549, avgReward=-337.2859744990889)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=8.05, nSimulations=4, avgReward=-398.75)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=3, pseudoWins=504.73, nSimulations=288, avgReward=-425.4236111111113)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=2.1100000000000003, nSimulations=2, avgReward=-494.5)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=15.53, nSimulations=8, avgReward=-405.875)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=2.06, nSimulations=2, avgReward=-497.0)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=7.640000000000001, nSimulations=5, avgReward=-447.2)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=5, pseudoWins=219.29999999999993, nSimulations=114, avgReward=-407.6315789473688)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=1.2, nSimulations=1, avgReward=-480.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=1.16, nSimulations=1, avgReward=-484.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=13.950000000000001, nSimulations=8, avgReward=-425.62500000000006)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=4, pseudoWins=166.11999999999995, nSimulations=103, avgReward=-438.7184466019418)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=0.86, nSimulations=1, avgReward=-514.0)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, pseudoWins=79.41000000000001, nSimulations=48, avgReward=-434.5624999999999)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, pseudoWins=32.12, nSimulations=9, avgReward=-243.11111111111114)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=1.37, nSimulations=1, avgReward=-463.0)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=17.38, nSimulations=7, avgReward=-351.7142857142857)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=1.17, nSimulations=1, avgReward=-483.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=17.45, nSimulations=8, avgReward=-381.87500000000006)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=3.05, nSimulations=1, avgReward=-295.0)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=97.65000000000002, nSimulations=86, avgReward=-486.4534883720931)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=0.95, nSimulations=1, avgReward=-505.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=1, pseudoWins=41.56000000000001, nSimulations=23, avgReward=-419.7826086956521)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=47.370000000000005, nSimulations=23, avgReward=-394.0434782608695)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=6, pseudoWins=304.15, nSimulations=119, avgReward=-344.4117647058824)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=11.34, nSimulations=7, avgReward=-437.99999999999994)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=12.319999999999999, nSimulations=8, avgReward=-446.00000000000006)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=216.03999999999994, nSimulations=121, avgReward=-422.2809917355373)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=1.23, nSimulations=1, avgReward=-477.0)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=5, pseudoWins=491.44999999999976, nSimulations=224, avgReward=-380.60267857142907)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=37, pseudoWins=840.1999999999991, nSimulations=310, avgReward=-328.99032258064534)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=4.93, nSimulations=3, avgReward=-435.66666666666663)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=10, pseudoWins=449.14000000000016, nSimulations=241, avgReward=-413.6348547717843)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, pseudoWins=64.57, nSimulations=42, avgReward=-446.2619047619047)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=35.4, nSimulations=24, avgReward=-452.49999999999994)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=24, pseudoWins=839.37, nSimulations=419, avgReward=-399.73985680190884)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=5, pseudoWins=94.53999999999998, nSimulations=27, avgReward=-249.85185185185193)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=4, pseudoWins=493.9699999999999, nSimulations=241, avgReward=-395.42738589211655)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=1, pseudoWins=29.41, nSimulations=8, avgReward=-232.375)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=42.03999999999999, nSimulations=26, avgReward=-439.19230769230774)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, pseudoWins=50.99999999999999, nSimulations=20, avgReward=-345.00000000000006)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=7.6499999999999995, nSimulations=4, avgReward=-408.75)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=1.16, nSimulations=1, avgReward=-484.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=3.25, nSimulations=3, avgReward=-491.66666666666663)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, pseudoWins=74.3, nSimulations=52, avgReward=-457.1153846153844)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=39, pseudoWins=1287.110000000001, nSimulations=573, avgReward=-375.373472949389)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=5.449999999999999, nSimulations=5, avgReward=-491.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=153.39000000000007, nSimulations=81, avgReward=-412.79012345679047)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=52.899999999999984, nSimulations=27, avgReward=-404.0740740740741)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=35.4, nSimulations=17, avgReward=-391.7647058823529)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, pseudoWins=702.8099999999997, nSimulations=471, avgReward=-451.3779193205942)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=1.06, nSimulations=1, avgReward=-494.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=9.6, nSimulations=8, avgReward=-480.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=33.9, nSimulations=16, avgReward=-388.125)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=3, pseudoWins=276.74, nSimulations=159, avgReward=-425.94968553459125)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=2.17, nSimulations=2, avgReward=-491.5)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=2, pseudoWins=47.980000000000004, nSimulations=18, avgReward=-333.4444444444444)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=5, pseudoWins=200.92000000000016, nSimulations=107, avgReward=-412.2242990654206)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=1.1, nSimulations=1, avgReward=-490.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=13.399999999999999, nSimulations=9, avgReward=-451.11111111111103)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, pseudoWins=23.709999999999994, nSimulations=8, avgReward=-303.625)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=33, pseudoWins=4004.4599999999973, nSimulations=2249, avgReward=-422.24099599822097)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=3.4000000000000004, nSimulations=4, avgReward=-515.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=53.41999999999997, nSimulations=31, avgReward=-427.67741935483866)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=13.62, nSimulations=7, avgReward=-405.4285714285714)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=3, pseudoWins=142.17999999999998, nSimulations=75, avgReward=-410.4266666666666)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=2, pseudoWins=65.56000000000002, nSimulations=32, avgReward=-395.1250000000001)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=2.84, nSimulations=3, avgReward=-505.3333333333333)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=4.6, nSimulations=2, avgReward=-370.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, pseudoWins=19.04, nSimulations=6, avgReward=-282.6666666666667)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=1.04, nSimulations=1, avgReward=-496.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=1.11, nSimulations=1, avgReward=-489.0)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=4, pseudoWins=175.17000000000004, nSimulations=102, avgReward=-428.2647058823531)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=4, pseudoWins=176.90000000000006, nSimulations=93, avgReward=-409.9032258064517)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=4.59, nSimulations=5, avgReward=-508.20000000000005)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=10.21, nSimulations=6, avgReward=-429.83333333333337)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=41.830000000000005, nSimulations=34, avgReward=-476.9705882352941)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=28.610000000000003, nSimulations=8, avgReward=-242.37499999999994)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=14.55, nSimulations=2, avgReward=127.5)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=4, pseudoWins=176.03000000000003, nSimulations=66, avgReward=-333.28787878787864)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=5.38, nSimulations=3, avgReward=-420.66666666666663)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=2, pseudoWins=60.150000000000006, nSimulations=21, avgReward=-313.5714285714285)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=21, pseudoWins=1041.76, nSimulations=385, avgReward=-329.9584415584417)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=100.18999999999998, nSimulations=62, avgReward=-438.40322580645164)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=5.1499999999999995, nSimulations=4, avgReward=-471.24999999999994)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=1, pseudoWins=37.06, nSimulations=17, avgReward=-382.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=63, pseudoWins=1534.6399999999987, nSimulations=641, avgReward=-360.5865834633379)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=14, pseudoWins=1937.660000000003, nSimulations=1063, avgReward=-418.12605832549343)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=4.2, nSimulations=2, avgReward=-390.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=1, pseudoWins=14.770000000000001, nSimulations=3, avgReward=-107.66666666666667)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, pseudoWins=19.75, nSimulations=5, avgReward=-205.0)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=13.04, nSimulations=9, avgReward=-455.1111111111111)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=18, pseudoWins=716.5799999999996, nSimulations=251, avgReward=-315.2948207171317)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=5.949999999999999, nSimulations=4, avgReward=-451.25)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=47.10000000000001, nSimulations=24, avgReward=-403.75000000000006)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=52.040000000000006, nSimulations=38, avgReward=-463.68421052631595)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=18.630000000000003, nSimulations=14, avgReward=-466.92857142857144)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=0.98, nSimulations=1, avgReward=-502.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=1, pseudoWins=127.36000000000004, nSimulations=78, avgReward=-436.71794871794873)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=13.46, nSimulations=10, avgReward=-465.3999999999999)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, pseudoWins=14.23, nSimulations=2, avgReward=111.5)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=5.25, nSimulations=3, avgReward=-425.0)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=1.83, nSimulations=2, avgReward=-508.5)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=9, pseudoWins=749.9300000000001, nSimulations=346, avgReward=-384.10982658959495)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=3, pseudoWins=90.43, nSimulations=42, avgReward=-384.69047619047615)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=26.53, nSimulations=20, avgReward=-467.34999999999997)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, pseudoWins=104.28, nSimulations=69, avgReward=-449.072463768116)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=2.97, nSimulations=1, avgReward=-303.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=17.700000000000003, nSimulations=10, avgReward=-423.00000000000006)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=0.83, nSimulations=1, avgReward=-517.0)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=7.1, nSimulations=4, avgReward=-422.5)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=5, pseudoWins=142.79000000000002, nSimulations=46, avgReward=-289.5869565217393)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=8, pseudoWins=313.10999999999996, nSimulations=112, avgReward=-320.6875000000003)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=12.509999999999998, nSimulations=9, avgReward=-461.0)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=1, pseudoWins=144.60000000000002, nSimulations=90, avgReward=-439.33333333333337)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=15.39, nSimulations=11, avgReward=-460.090909090909)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=8.07, nSimulations=7, avgReward=-484.7142857142857)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=17, pseudoWins=654.86, nSimulations=357, avgReward=-416.56582633053245)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=20.89, nSimulations=6, avgReward=-251.83333333333331)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=24.19, nSimulations=14, avgReward=-427.2142857142858)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=2, pseudoWins=274.2000000000001, nSimulations=175, avgReward=-443.45142857142866)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=1.96, nSimulations=1, avgReward=-404.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=5.869999999999999, nSimulations=5, avgReward=-482.6)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=2, pseudoWins=32.23, nSimulations=5, avgReward=44.59999999999998)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=200.24000000000012, nSimulations=124, avgReward=-439.0645161290321)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=49.17, nSimulations=23, avgReward=-386.2173913043478)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=2, pseudoWins=59.20999999999999, nSimulations=24, avgReward=-353.2916666666667)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=3.43, nSimulations=4, avgReward=-514.25)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=2.94, nSimulations=1, avgReward=-306.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=115.92000000000003, nSimulations=89, avgReward=-469.8876404494382)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=6, pseudoWins=207.51999999999995, nSimulations=115, avgReward=-419.54782608695666)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=15.89, nSimulations=6, avgReward=-335.1666666666667)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=2.8899999999999997, nSimulations=3, avgReward=-503.66666666666663)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=3, pseudoWins=209.29000000000005, nSimulations=93, avgReward=-375.20430107526863)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=11.139999999999999, nSimulations=7, avgReward=-440.85714285714283)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=6.17, nSimulations=3, avgReward=-394.3333333333333)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=4, pseudoWins=558.6499999999995, nSimulations=242, avgReward=-370.35950413223185)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=34.4, nSimulations=23, avgReward=-450.4347826086956)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=26, pseudoWins=916.3700000000002, nSimulations=272, avgReward=-263.2977941176469)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=1, pseudoWins=37.400000000000006, nSimulations=19, avgReward=-403.1578947368421)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=0.86, nSimulations=1, avgReward=-514.0)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=3, pseudoWins=79.08, nSimulations=35, avgReward=-374.0571428571429)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=8.24, nSimulations=6, avgReward=-462.66666666666674)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=2, pseudoWins=74.04999999999998, nSimulations=42, avgReward=-423.95238095238096)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, pseudoWins=451.0600000000001, nSimulations=271, avgReward=-433.69741697417015)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=2, pseudoWins=43.330000000000005, nSimulations=13, avgReward=-266.6923076923077)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=29.02, nSimulations=8, avgReward=-237.25000000000006)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=18, pseudoWins=663.3000000000005, nSimulations=318, avgReward=-391.5031446540882)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=9, pseudoWins=553.7499999999999, nSimulations=334, avgReward=-434.22754491017986)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, pseudoWins=24.88, nSimulations=7, avgReward=-244.57142857142856)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, pseudoWins=38.04, nSimulations=19, avgReward=-399.7894736842105)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=12.71, nSimulations=8, avgReward=-442.00000000000006)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=4.71, nSimulations=3, avgReward=-443.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=1.02, nSimulations=1, avgReward=-498.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=3.2, nSimulations=3, avgReward=-493.33333333333337)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=7.68, nSimulations=6, avgReward=-472.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=11.15, nSimulations=6, avgReward=-414.16666666666674)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, pseudoWins=13.129999999999999, nSimulations=3, avgReward=-162.33333333333334)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, pseudoWins=688.3700000000002, nSimulations=436, avgReward=-442.5986238532108)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=2.2, nSimulations=2, avgReward=-490.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, pseudoWins=14.780000000000001, nSimulations=4, avgReward=-230.5)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=5.45, nSimulations=5, avgReward=-491.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=11.64, nSimulations=9, avgReward=-470.6666666666667)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=1.94, nSimulations=2, avgReward=-503.0)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=1.15, nSimulations=1, avgReward=-485.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=38.61000000000001, nSimulations=21, avgReward=-416.1428571428571)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=1.97, nSimulations=2, avgReward=-501.5)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=70.96999999999998, nSimulations=39, avgReward=-418.02564102564116)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=11.63, nSimulations=5, avgReward=-367.40000000000003)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=30.20000000000001, nSimulations=23, avgReward=-468.695652173913)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=23.439999999999998, nSimulations=13, avgReward=-419.6923076923077)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=117, pseudoWins=2516.959999999994, nSimulations=923, avgReward=-327.35644637053105)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=37.73000000000002, nSimulations=39, avgReward=-503.2564102564103)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, pseudoWins=94.31, nSimulations=46, avgReward=-397.1521739130434)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=15.269999999999998, nSimulations=11, avgReward=-461.1818181818182)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=1, pseudoWins=102.18, nSimulations=67, avgReward=-447.4925373134327)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=5, pseudoWins=632.1499999999997, nSimulations=299, avgReward=-388.9030100334449)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=1.1, nSimulations=1, avgReward=-490.0)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=6.73, nSimulations=3, avgReward=-375.66666666666663)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=154.81, nSimulations=84, avgReward=-416.07142857142844)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, pseudoWins=64.22999999999999, nSimulations=43, avgReward=-450.62790697674416)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=4, pseudoWins=133.72999999999996, nSimulations=68, avgReward=-403.3382352941177)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=1, pseudoWins=207.77999999999997, nSimulations=109, avgReward=-410.95412844036707)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=65.10999999999997, nSimulations=52, avgReward=-474.78846153846155)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=2, pseudoWins=151.56000000000006, nSimulations=80, avgReward=-411.22499999999997)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=72.17999999999999, nSimulations=53, avgReward=-463.8113207547169)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=22, pseudoWins=916.8200000000003, nSimulations=301, avgReward=-295.6179401993353)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=8.63, nSimulations=6, avgReward=-456.1666666666667)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=28.070000000000007, nSimulations=20, avgReward=-459.65)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=1, pseudoWins=82.11999999999999, nSimulations=46, avgReward=-421.4782608695653)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=8.81, nSimulations=6, avgReward=-453.1666666666667)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, pseudoWins=482.26000000000016, nSimulations=271, avgReward=-422.3837638376384)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=1.32, nSimulations=1, avgReward=-468.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=9.370000000000001, nSimulations=5, avgReward=-412.6)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, pseudoWins=186.64000000000004, nSimulations=83, avgReward=-375.5060240963855)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=25, pseudoWins=696.3099999999994, nSimulations=306, avgReward=-372.44771241830085)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=61.80000000000001, nSimulations=45, avgReward=-462.6666666666666)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=6, pseudoWins=203.36, nSimulations=105, avgReward=-406.59047619047624)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=1.98, nSimulations=2, avgReward=-501.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=6.959999999999999, nSimulations=4, avgReward=-426.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=3.07, nSimulations=1, avgReward=-293.0)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=135.77, nSimulations=93, avgReward=-454.0107526881722)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=37.58, nSimulations=14, avgReward=-331.57142857142856)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=4.26, nSimulations=4, avgReward=-493.5)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=2.98, nSimulations=1, avgReward=-302.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=49.24000000000001, nSimulations=24, avgReward=-394.8333333333333)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=2, pseudoWins=57.969999999999985, nSimulations=28, avgReward=-392.9642857142856)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=21.92, nSimulations=14, avgReward=-443.42857142857144)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=108, pseudoWins=2675.4400000000014, nSimulations=1098, avgReward=-356.3706739526415)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=14.14, nSimulations=9, avgReward=-442.8888888888889)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=11.05, nSimulations=6, avgReward=-415.8333333333334)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=3.66, nSimulations=4, avgReward=-508.5)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=226.66000000000005, nSimulations=127, avgReward=-421.95275590551194)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=240.69000000000003, nSimulations=127, avgReward=-410.48031496063015)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=21, pseudoWins=675.56, nSimulations=327, avgReward=-393.4067278287463)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=9, pseudoWins=719.26, nSimulations=391, avgReward=-416.3324808184141)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=6.78, nSimulations=7, avgReward=-503.14285714285717)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=1, pseudoWins=369.16999999999973, nSimulations=219, avgReward=-432.02283105022855)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=2.29, nSimulations=2, avgReward=-485.5)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, pseudoWins=132.65, nSimulations=97, avgReward=-463.3711340206185)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=51.56000000000001, nSimulations=35, avgReward=-452.68571428571414)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=3.94, nSimulations=4, avgReward=-501.5)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, pseudoWins=40.14999999999999, nSimulations=23, avgReward=-425.43478260869557)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=2, pseudoWins=61.05, nSimulations=14, avgReward=-163.92857142857142)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=20.11, nSimulations=13, avgReward=-445.3076923076923)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=8.47, nSimulations=4, avgReward=-388.25)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=3.1, nSimulations=3, avgReward=-496.66666666666663)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=1, pseudoWins=77.57000000000002, nSimulations=43, avgReward=-419.60465116279073)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=25.979999999999997, nSimulations=20, avgReward=-470.09999999999997)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=2, pseudoWins=242.31999999999996, nSimulations=133, avgReward=-418.68421052631606)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=1.81, nSimulations=1, avgReward=-419.0)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=5, pseudoWins=319.3499999999998, nSimulations=167, avgReward=-409.19760479041906)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=4.66, nSimulations=4, avgReward=-483.5)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=7.35, nSimulations=4, avgReward=-416.24999999999994)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=44.51, nSimulations=26, avgReward=-428.80769230769226)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=35.449999999999996, nSimulations=17, avgReward=-391.4705882352942)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=20, pseudoWins=774.0200000000002, nSimulations=250, avgReward=-291.47999999999985)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=283.76, nSimulations=155, avgReward=-417.2774193548388)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=1, pseudoWins=20.98, nSimulations=8, avgReward=-337.75)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=7.72, nSimulations=6, avgReward=-471.33333333333337)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=199.60999999999993, nSimulations=108, avgReward=-417.0648148148148)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, pseudoWins=82.02999999999999, nSimulations=65, avgReward=-474.0153846153844)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=36, pseudoWins=911.0099999999999, nSimulations=211, avgReward=-169.260663507109)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=31, pseudoWins=1595.1999999999982, nSimulations=592, avgReward=-331.1114864864866)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=9.98, nSimulations=5, avgReward=-400.40000000000003)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=0.96, nSimulations=1, avgReward=-504.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=10.18, nSimulations=6, avgReward=-430.3333333333333)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, pseudoWins=31.51, nSimulations=17, avgReward=-414.64705882352933)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=148.94000000000008, nSimulations=81, avgReward=-418.2839506172843)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, pseudoWins=16.169999999999998, nSimulations=2, avgReward=208.5)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=0.97, nSimulations=1, avgReward=-503.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=11.7, nSimulations=6, avgReward=-405.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=2.98, nSimulations=1, avgReward=-302.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=23, pseudoWins=758.5100000000001, nSimulations=372, avgReward=-396.0994623655918)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=38.11, nSimulations=34, avgReward=-487.91176470588226)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=7.8100000000000005, nSimulations=9, avgReward=-513.2222222222222)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=9.559999999999999, nSimulations=8, avgReward=-489.375)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=1.03, nSimulations=1, avgReward=-497.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=2, pseudoWins=110.54, nSimulations=58, avgReward=-409.82758620689634)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=4.779999999999999, nSimulations=3, avgReward=-440.66666666666663)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=10.73, nSimulations=8, avgReward=-465.875)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=8.01, nSimulations=8, avgReward=-499.875)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=12.989999999999998, nSimulations=6, avgReward=-383.5)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=1.73, nSimulations=2, avgReward=-513.5)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, pseudoWins=12.4, nSimulations=2, avgReward=20.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=5, pseudoWins=184.43000000000012, nSimulations=101, avgReward=-417.6732673267326)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=2.19, nSimulations=2, avgReward=-490.5)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=48, pseudoWins=1093.6399999999994, nSimulations=449, avgReward=-356.5322939866367)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=1, pseudoWins=16.0, nSimulations=6, avgReward=-333.33333333333337)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=21.970000000000002, nSimulations=12, avgReward=-416.91666666666663)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=7.380000000000001, nSimulations=5, avgReward=-452.4)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=1, pseudoWins=26.03, nSimulations=9, avgReward=-310.77777777777777)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=1.12, nSimulations=1, avgReward=-488.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=15.540000000000001, nSimulations=14, avgReward=-489.00000000000006)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=121, pseudoWins=2480.1299999999987, nSimulations=888, avgReward=-320.73761261261296)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, pseudoWins=25.12, nSimulations=12, avgReward=-390.66666666666663)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=11, pseudoWins=302.4599999999999, nSimulations=129, avgReward=-365.5348837209304)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, pseudoWins=39.44, nSimulations=21, avgReward=-412.19047619047615)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=17.810000000000002, nSimulations=14, avgReward=-472.7857142857143)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=309.51, nSimulations=175, avgReward=-423.8571428571427)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=12, pseudoWins=606.0199999999996, nSimulations=365, avgReward=-433.9671232876715)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=2.21, nSimulations=2, avgReward=-489.5)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, pseudoWins=14.840000000000002, nSimulations=4, avgReward=-229.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=11.439999999999998, nSimulations=7, avgReward=-436.57142857142856)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=82.68, nSimulations=59, avgReward=-460.3898305084744)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=2, pseudoWins=134.92, nSimulations=92, avgReward=-453.3478260869567)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=1.17, nSimulations=1, avgReward=-483.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=9.35, nSimulations=8, avgReward=-483.125)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=3.19, nSimulations=1, avgReward=-281.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=42.10000000000001, nSimulations=24, avgReward=-424.5833333333332)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=26, pseudoWins=1690.4899999999993, nSimulations=672, avgReward=-348.636904761905)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=1.8599999999999999, nSimulations=2, avgReward=-507.0)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=1.17, nSimulations=1, avgReward=-483.0)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=64, pseudoWins=1685.1999999999996, nSimulations=648, avgReward=-339.9382716049382)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=7.029999999999999, nSimulations=4, avgReward=-424.25)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=43, pseudoWins=1170.1399999999994, nSimulations=512, avgReward=-371.45703125000017)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=7.94, nSimulations=5, avgReward=-441.2)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=3.22, nSimulations=1, avgReward=-278.0)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=73.99000000000001, nSimulations=38, avgReward=-405.2894736842107)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=5, pseudoWins=549.6199999999994, nSimulations=277, avgReward=-402.7545126353789)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=44.150000000000006, nSimulations=26, avgReward=-430.1923076923077)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=8.39, nSimulations=4, avgReward=-390.25)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=1.78, nSimulations=1, avgReward=-422.0)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, pseudoWins=51.69999999999999, nSimulations=20, avgReward=-341.50000000000006)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=3.42, nSimulations=3, avgReward=-486.0)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=2, pseudoWins=56.120000000000005, nSimulations=20, avgReward=-319.40000000000015)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, pseudoWins=92.40999999999997, nSimulations=57, avgReward=-437.877192982456)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=0.72, nSimulations=1, avgReward=-528.0)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=49.01000000000001, nSimulations=33, avgReward=-451.48484848484844)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=4, pseudoWins=124.79999999999998, nSimulations=56, avgReward=-377.14285714285694)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=9.1, nSimulations=7, avgReward=-470.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=21.980000000000004, nSimulations=8, avgReward=-325.25)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=22, pseudoWins=867.7900000000002, nSimulations=304, avgReward=-314.92434210526307)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=7.87, nSimulations=6, avgReward=-468.83333333333337)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=1.01, nSimulations=1, avgReward=-499.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=9.7, nSimulations=7, avgReward=-461.42857142857144)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=1.88, nSimulations=2, avgReward=-506.0)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=25.379999999999995, nSimulations=20, avgReward=-473.09999999999985)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=2, pseudoWins=141.15, nSimulations=95, avgReward=-451.421052631579)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=1, pseudoWins=18.270000000000003, nSimulations=5, avgReward=-234.60000000000002)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=1.67, nSimulations=1, avgReward=-433.0)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=3.88, nSimulations=3, avgReward=-470.66666666666663)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=5.539999999999999, nSimulations=4, avgReward=-461.5)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=3.2199999999999998, nSimulations=2, avgReward=-439.0)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=11.980000000000002, nSimulations=5, avgReward=-360.4)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=4.21, nSimulations=2, avgReward=-389.5)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=36.71, nSimulations=21, avgReward=-425.1904761904759)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=42.73999999999999, nSimulations=33, avgReward=-470.7575757575757)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=65.72999999999999, nSimulations=44, avgReward=-450.61363636363643)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=6, pseudoWins=494.1, nSimulations=222, avgReward=-378.2702702702705)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=6.69, nSimulations=6, avgReward=-488.50000000000006)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=96, pseudoWins=2274.3299999999963, nSimulations=923, avgReward=-353.6565547128927)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=10.440000000000001, nSimulations=7, avgReward=-450.8571428571429)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=14.42, nSimulations=8, avgReward=-419.74999999999994)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=2.29, nSimulations=2, avgReward=-485.5)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, pseudoWins=102.16999999999999, nSimulations=48, avgReward=-387.1458333333333)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=6, pseudoWins=233.07, nSimulations=83, avgReward=-319.1927710843373)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=18.180000000000003, nSimulations=4, avgReward=-145.5)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=4.29, nSimulations=2, avgReward=-385.5)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=93, pseudoWins=1920.0799999999977, nSimulations=732, avgReward=-337.7581967213113)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=6.52, nSimulations=6, avgReward=-491.3333333333333)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=9.059999999999999, nSimulations=6, avgReward=-449.00000000000006)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=1, pseudoWins=17.92, nSimulations=4, avgReward=-152.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=28.759999999999998, nSimulations=14, avgReward=-394.57142857142856)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=1.12, nSimulations=1, avgReward=-488.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=3.92, nSimulations=4, avgReward=-502.0)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=8.120000000000001, nSimulations=5, avgReward=-437.6)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=4.640000000000001, nSimulations=3, avgReward=-445.33333333333337)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, pseudoWins=20.31, nSimulations=7, avgReward=-309.85714285714283)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=5, pseudoWins=653.2999999999998, nSimulations=329, avgReward=-401.7963525835862)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=139.33, nSimulations=101, avgReward=-462.0495049504951)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=3, pseudoWins=404.52999999999986, nSimulations=202, avgReward=-400.17821782178254)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=3, pseudoWins=89.34, nSimulations=41, avgReward=-382.0975609756095)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=42.81000000000001, nSimulations=42, avgReward=-498.0714285714287)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=23.26, nSimulations=25, avgReward=-506.96)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=7.28, nSimulations=5, avgReward=-454.40000000000003)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=12.19, nSimulations=10, avgReward=-478.1)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=1.22, nSimulations=1, avgReward=-478.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=11.74, nSimulations=7, avgReward=-432.2857142857143)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=2, pseudoWins=74.11999999999999, nSimulations=30, avgReward=-352.9333333333333)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=6, pseudoWins=390.30999999999983, nSimulations=225, avgReward=-426.56000000000057)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=2.7800000000000002, nSimulations=2, avgReward=-461.0)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=7.12, nSimulations=5, avgReward=-457.6)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=1, pseudoWins=212.94, nSimulations=109, avgReward=-405.4587155963303)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=11.049999999999999, nSimulations=6, avgReward=-415.83333333333337)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=32.790000000000006, nSimulations=18, avgReward=-417.8333333333333)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=13, pseudoWins=709.0800000000002, nSimulations=416, avgReward=-429.5480769230767)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=2, pseudoWins=3022.3899999999994, nSimulations=1906, avgReward=-441.62749213011364)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=2, pseudoWins=131.91000000000003, nSimulations=85, avgReward=-445.17647058823525)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=11, pseudoWins=327.8399999999998, nSimulations=148, avgReward=-378.4864864864865)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=1.87, nSimulations=1, avgReward=-413.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=15, pseudoWins=540.63, nSimulations=292, avgReward=-414.8767123287671)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=36.61000000000001, nSimulations=23, avgReward=-440.8260869565215)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=10.39, nSimulations=5, avgReward=-392.20000000000005)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=7.58, nSimulations=7, avgReward=-491.71428571428567)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, pseudoWins=53.21000000000001, nSimulations=31, avgReward=-428.35483870967744)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=17.38, nSimulations=14, avgReward=-475.85714285714283)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=1.12, nSimulations=1, avgReward=-488.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=9.079999999999998, nSimulations=7, avgReward=-470.2857142857142)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=4, pseudoWins=250.89000000000007, nSimulations=147, avgReward=-429.37414965986403)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=22, pseudoWins=659.2799999999997, nSimulations=322, avgReward=-395.37577639751566)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=23, pseudoWins=1399.7899999999993, nSimulations=600, avgReward=-367.02833333333325)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=7.1899999999999995, nSimulations=5, avgReward=-456.20000000000005)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=85.42, nSimulations=62, avgReward=-462.22580645161264)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=3.33, nSimulations=3, avgReward=-489.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=2.12, nSimulations=2, avgReward=-494.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=51.98000000000002, nSimulations=46, avgReward=-487.0)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=90.80999999999999, nSimulations=86, avgReward=-494.40697674418635)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=8, pseudoWins=640.6999999999997, nSimulations=353, avgReward=-418.6912181303114)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=4.26, nSimulations=4, avgReward=-493.5)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=6.3999999999999995, nSimulations=4, avgReward=-440.0)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=3, pseudoWins=99.67999999999996, nSimulations=50, avgReward=-400.64000000000004)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=71.55000000000001, nSimulations=34, avgReward=-389.5588235294118)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=7.92, nSimulations=4, avgReward=-402.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=5.3500000000000005, nSimulations=5, avgReward=-496.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=57.31, nSimulations=40, avgReward=-456.72499999999997)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=1, pseudoWins=32.13999999999999, nSimulations=18, avgReward=-421.4444444444445)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, pseudoWins=101.15999999999997, nSimulations=64, avgReward=-441.93749999999983)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=1, pseudoWins=30.07, nSimulations=10, avgReward=-299.3)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=7.33, nSimulations=5, avgReward=-453.4)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=7.680000000000001, nSimulations=5, avgReward=-446.40000000000003)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=1.01, nSimulations=1, avgReward=-499.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=78, pseudoWins=2187.8200000000006, nSimulations=862, avgReward=-346.19257540603263)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=2.8, nSimulations=1, avgReward=-320.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=1.99, nSimulations=2, avgReward=-500.5)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=3, pseudoWins=73.30999999999997, nSimulations=33, avgReward=-377.848484848485)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=69.39, nSimulations=52, avgReward=-466.55769230769243)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=5.96, nSimulations=2, avgReward=-302.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=27.71, nSimulations=14, avgReward=-402.07142857142856)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=4.52, nSimulations=2, avgReward=-374.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=2, pseudoWins=39.54, nSimulations=13, avgReward=-295.8461538461538)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, pseudoWins=176.33, nSimulations=87, avgReward=-397.5977011494253)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=8.66, nSimulations=8, avgReward=-491.74999999999994)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=18.540000000000003, nSimulations=15, avgReward=-476.4)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, pseudoWins=52.02, nSimulations=32, avgReward=-437.43750000000006)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=3, pseudoWins=141.62000000000003, nSimulations=75, avgReward=-411.1733333333333)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=4.23, nSimulations=3, avgReward=-459.0)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, pseudoWins=26.300000000000004, nSimulations=10, avgReward=-337.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=0.9, nSimulations=1, avgReward=-510.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=4, pseudoWins=121.47, nSimulations=30, avgReward=-195.10000000000002)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=10.8, nSimulations=6, avgReward=-420.00000000000006)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=5, pseudoWins=129.28000000000003, nSimulations=60, avgReward=-384.53333333333325)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=25.85, nSimulations=20, avgReward=-470.75)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=10, pseudoWins=403.4199999999998, nSimulations=235, avgReward=-428.331914893617)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=2.11, nSimulations=2, avgReward=-494.5)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=27, pseudoWins=796.0800000000007, nSimulations=362, avgReward=-380.1657458563536)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=1, pseudoWins=22.439999999999998, nSimulations=7, avgReward=-279.42857142857144)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=5.44, nSimulations=6, avgReward=-509.3333333333334)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=4, pseudoWins=115.26, nSimulations=30, avgReward=-215.80000000000004)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=8.41, nSimulations=4, avgReward=-389.75)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=1.04, nSimulations=1, avgReward=-496.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=10.82, nSimulations=6, avgReward=-419.66666666666674)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=6.609999999999999, nSimulations=2, avgReward=-269.5)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=84.64999999999999, nSimulations=47, avgReward=-419.89361702127667)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=1, pseudoWins=68.80999999999999, nSimulations=39, avgReward=-423.87179487179503)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, pseudoWins=16.87, nSimulations=4, avgReward=-178.25)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=3.07, nSimulations=1, avgReward=-293.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=1, pseudoWins=23.899999999999995, nSimulations=10, avgReward=-360.99999999999994)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=4.93, nSimulations=4, avgReward=-484.5)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=0.83, nSimulations=1, avgReward=-517.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=0.61, nSimulations=1, avgReward=-539.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=1.21, nSimulations=1, avgReward=-479.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=22, pseudoWins=4361.870000000003, nSimulations=2615, avgReward=-433.44741873804884)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=3, pseudoWins=119.50000000000003, nSimulations=68, avgReward=-426.7941176470587)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=1.25, nSimulations=1, avgReward=-475.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, pseudoWins=222.00000000000006, nSimulations=113, avgReward=-404.4955752212391)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=10.400000000000002, nSimulations=8, avgReward=-470.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=27.299999999999997, nSimulations=20, avgReward=-463.49999999999994)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, pseudoWins=50.65, nSimulations=34, avgReward=-451.94117647058823)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=18.21, nSimulations=11, avgReward=-434.4545454545454)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=1.1, nSimulations=1, avgReward=-490.0)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=7.26, nSimulations=6, avgReward=-479.00000000000006)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=2.07, nSimulations=2, avgReward=-496.5)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=41.14, nSimulations=38, avgReward=-491.73684210526335)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=2, pseudoWins=115.67999999999998, nSimulations=59, avgReward=-403.9322033898304)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=4, pseudoWins=153.56000000000006, nSimulations=70, avgReward=-380.6285714285711)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=3.8, nSimulations=3, avgReward=-473.3333333333333)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=1.74, nSimulations=1, avgReward=-426.0)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=1.64, nSimulations=1, avgReward=-436.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=2, pseudoWins=82.52, nSimulations=50, avgReward=-434.96)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=117, pseudoWins=2709.1200000000003, nSimulations=1077, avgReward=-348.4828226555247)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=0.81, nSimulations=1, avgReward=-519.0)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=2, pseudoWins=200.51, nSimulations=88, avgReward=-372.14772727272725)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=1, pseudoWins=82.10000000000001, nSimulations=60, avgReward=-463.1666666666667)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=14.049999999999999, nSimulations=8, avgReward=-424.375)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=1.06, nSimulations=1, avgReward=-494.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=14.809999999999999, nSimulations=9, avgReward=-435.44444444444446)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=17.970000000000002, nSimulations=12, avgReward=-450.25)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=4.71, nSimulations=5, avgReward=-505.8)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=5.239999999999999, nSimulations=3, avgReward=-425.33333333333337)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=95, pseudoWins=2399.5700000000006, nSimulations=870, avgReward=-324.1873563218394)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=9, pseudoWins=322.97, nSimulations=111, avgReward=-309.036036036036)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, pseudoWins=184.37999999999994, nSimulations=106, avgReward=-427.6698113207548)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=43.510000000000005, nSimulations=43, avgReward=-498.8139534883721)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=3.02, nSimulations=1, avgReward=-298.0)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=31.499999999999996, nSimulations=25, avgReward=-473.99999999999994)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=2.6799999999999997, nSimulations=2, avgReward=-466.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=104.18000000000004, nSimulations=66, avgReward=-442.151515151515)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=20, pseudoWins=575.74, nSimulations=262, avgReward=-380.40458015267217)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, pseudoWins=46.07999999999999, nSimulations=18, avgReward=-347.94444444444434)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=66, pseudoWins=1423.4599999999998, nSimulations=546, avgReward=-339.30586080586096)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=47.78999999999999, nSimulations=36, avgReward=-467.44444444444446)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=10, pseudoWins=445.29000000000013, nSimulations=184, avgReward=-358.8478260869566)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=84.94999999999997, nSimulations=61, avgReward=-460.73770491803253)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=1.17, nSimulations=1, avgReward=-483.0)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=4.47, nSimulations=3, avgReward=-451.0)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=20.050000000000004, nSimulations=23, avgReward=-512.8260869565216)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, pseudoWins=79.03999999999999, nSimulations=27, avgReward=-307.25925925925924)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=2.41, nSimulations=2, avgReward=-479.5)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=39.88, nSimulations=23, avgReward=-426.6086956521739)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, pseudoWins=40.219999999999985, nSimulations=19, avgReward=-388.3157894736842)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=8.469999999999999, nSimulations=7, avgReward=-479.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=0.97, nSimulations=1, avgReward=-503.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=1, pseudoWins=55.49, nSimulations=32, avgReward=-426.59374999999994)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=3, pseudoWins=74.41000000000001, nSimulations=28, avgReward=-334.25000000000006)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=24.080000000000002, nSimulations=19, avgReward=-473.263157894737)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=6.859999999999999, nSimulations=7, avgReward=-501.9999999999999)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=3, pseudoWins=63.0, nSimulations=23, avgReward=-326.08695652173907)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, pseudoWins=110.42999999999999, nSimulations=62, avgReward=-421.8870967741933)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=12.059999999999999, nSimulations=5, avgReward=-358.80000000000007)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=7.65, nSimulations=7, avgReward=-490.7142857142857)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=0.95, nSimulations=1, avgReward=-505.0)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=52.89000000000001, nSimulations=23, avgReward=-370.0434782608696)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=1.2, nSimulations=1, avgReward=-480.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, pseudoWins=81.11, nSimulations=41, avgReward=-404.34146341463423)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=2, pseudoWins=42.839999999999996, nSimulations=12, avgReward=-243.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, pseudoWins=58.48, nSimulations=20, avgReward=-307.59999999999997)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=6.41, nSimulations=2, avgReward=-279.5)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=0.8300000000000001, nSimulations=2, avgReward=-558.5)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=6.1899999999999995, nSimulations=4, avgReward=-445.25)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=24.450000000000003, nSimulations=14, avgReward=-425.35714285714283)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=8, pseudoWins=185.83, nSimulations=78, avgReward=-361.7564102564103)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=20.969999999999995, nSimulations=19, avgReward=-489.6315789473685)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=4, pseudoWins=202.3600000000001, nSimulations=107, avgReward=-411.252336448598)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=5, pseudoWins=123.69999999999999, nSimulations=68, avgReward=-418.0882352941176)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=39.63999999999999, nSimulations=27, avgReward=-453.1851851851851)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=1.21, nSimulations=1, avgReward=-479.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=1, pseudoWins=27.99, nSimulations=8, avgReward=-250.12499999999994)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=5.11, nSimulations=3, avgReward=-429.66666666666663)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=8.13, nSimulations=5, avgReward=-437.4)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=1.03, nSimulations=1, avgReward=-497.0)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=4.64, nSimulations=2, avgReward=-368.0)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=13.22, nSimulations=8, avgReward=-434.75)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=22.060000000000002, nSimulations=10, avgReward=-379.40000000000003)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, pseudoWins=16.52, nSimulations=4, avgReward=-187.0)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=44, pseudoWins=4190.479999999998, nSimulations=2056, avgReward=-396.50778210116664)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=4, pseudoWins=125.34999999999991, nSimulations=71, avgReward=-423.4507042253523)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=23.290000000000003, nSimulations=16, avgReward=-454.43750000000006)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=6.909999999999999, nSimulations=6, avgReward=-484.83333333333337)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=1.03, nSimulations=1, avgReward=-497.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=6.02, nSimulations=4, avgReward=-449.5)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=10.96, nSimulations=7, avgReward=-443.42857142857144)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=18.969999999999995, nSimulations=14, avgReward=-464.49999999999994)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=1.49, nSimulations=1, avgReward=-451.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=15.700000000000001, nSimulations=6, avgReward=-338.33333333333337)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=6.869999999999999, nSimulations=5, avgReward=-462.6)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=24, pseudoWins=1807.62, nSimulations=880, avgReward=-395.10113636363633)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=5.93, nSimulations=6, avgReward=-501.1666666666667)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=29.66, nSimulations=12, avgReward=-352.83333333333326)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=5, pseudoWins=250.66000000000008, nSimulations=99, avgReward=-346.8080808080808)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=4.55, nSimulations=4, avgReward=-486.25)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=3.02, nSimulations=3, avgReward=-499.3333333333333)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=57.89000000000001, nSimulations=46, avgReward=-474.7608695652172)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=31.770000000000007, nSimulations=17, avgReward=-413.11764705882354)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=30.26, nSimulations=17, avgReward=-421.99999999999994)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=9.61, nSimulations=5, avgReward=-407.80000000000007)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, pseudoWins=53.66000000000001, nSimulations=26, avgReward=-393.61538461538464)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=31.400000000000002, nSimulations=24, avgReward=-473.5)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=5.180000000000001, nSimulations=4, avgReward=-470.5)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=12.780000000000001, nSimulations=9, avgReward=-457.99999999999994)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=60.09999999999999, nSimulations=47, avgReward=-472.12765957446794)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, pseudoWins=35.13, nSimulations=14, avgReward=-349.0714285714285)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=1.03, nSimulations=1, avgReward=-497.0)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=4, pseudoWins=190.67, nSimulations=106, avgReward=-420.12264150943395)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=7.43, nSimulations=7, avgReward=-493.85714285714283)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=2, pseudoWins=53.76999999999999, nSimulations=19, avgReward=-317.00000000000006)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=26.530000000000005, nSimulations=19, avgReward=-460.3684210526315)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=6.86, nSimulations=6, avgReward=-485.6666666666667)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=168.70000000000005, nSimulations=97, avgReward=-427.8865979381445)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=6, pseudoWins=209.7100000000001, nSimulations=114, avgReward=-416.043859649123)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=102, pseudoWins=2303.480000000002, nSimulations=765, avgReward=-298.92810457516407)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=6.1000000000000005, nSimulations=4, avgReward=-447.5)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=6.42, nSimulations=6, avgReward=-493.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=0.7, nSimulations=1, avgReward=-530.0)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=2.12, nSimulations=2, avgReward=-494.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=13.180000000000003, nSimulations=8, avgReward=-435.25)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=4, pseudoWins=119.34000000000002, nSimulations=68, avgReward=-424.49999999999994)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=4.76, nSimulations=5, avgReward=-504.80000000000007)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=5.45, nSimulations=5, avgReward=-491.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=18, pseudoWins=784.0400000000005, nSimulations=430, avgReward=-417.6651162790696)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=26, pseudoWins=595.2600000000001, nSimulations=150, avgReward=-203.34666666666675)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=1.28, nSimulations=1, avgReward=-472.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=17.66, nSimulations=10, avgReward=-423.40000000000003)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=6.52, nSimulations=5, avgReward=-469.6)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=6.5200000000000005, nSimulations=6, avgReward=-491.33333333333337)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=83.16000000000001, nSimulations=43, avgReward=-407.1395348837209)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=1.47, nSimulations=2, avgReward=-526.5)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=5.46, nSimulations=4, avgReward=-463.5)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=798.8400000000004, nSimulations=461, avgReward=-427.14316702819997)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=1.07, nSimulations=1, avgReward=-493.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=1.05, nSimulations=1, avgReward=-495.0)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, pseudoWins=34.089999999999996, nSimulations=8, avgReward=-173.875)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=5, pseudoWins=157.93, nSimulations=37, avgReward=-173.1621621621622)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=2, pseudoWins=67.02000000000004, nSimulations=37, avgReward=-418.8648648648648)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=484.4800000000001, nSimulations=271, avgReward=-421.8523985239854)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=3.48, nSimulations=2, avgReward=-426.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=21, pseudoWins=724.13, nSimulations=207, avgReward=-251.14009661835726)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=1.21, nSimulations=1, avgReward=-479.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=16.39, nSimulations=9, avgReward=-417.8888888888889)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, pseudoWins=34.339999999999996, nSimulations=16, avgReward=-385.37500000000006)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=9.34, nSimulations=6, avgReward=-444.3333333333334)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=6, pseudoWins=199.71999999999989, nSimulations=114, avgReward=-424.8070175438599)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=6.67, nSimulations=4, avgReward=-433.25)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=2.96, nSimulations=3, avgReward=-501.3333333333333)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=3.17, nSimulations=3, avgReward=-494.3333333333333)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=2.3600000000000003, nSimulations=2, avgReward=-482.0)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=9, pseudoWins=715.0899999999999, nSimulations=385, avgReward=-414.7688311688311)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=7.3100000000000005, nSimulations=4, avgReward=-417.25)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=1, pseudoWins=119.13000000000002, nSimulations=80, avgReward=-451.0875000000001)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=1.49, nSimulations=1, avgReward=-451.0)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=7.1499999999999995, nSimulations=7, avgReward=-497.8571428571429)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=6.96, nSimulations=7, avgReward=-500.5714285714285)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=8.06, nSimulations=6, avgReward=-465.66666666666674)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=3.26, nSimulations=1, avgReward=-274.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=1.56, nSimulations=2, avgReward=-522.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=18.029999999999994, nSimulations=14, avgReward=-471.2142857142858)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=6, pseudoWins=184.05000000000004, nSimulations=113, avgReward=-437.1238938053097)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=3, pseudoWins=156.68000000000004, nSimulations=92, avgReward=-429.6956521739129)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=70.79, nSimulations=69, avgReward=-497.4057971014492)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=12, pseudoWins=373.72, nSimulations=152, avgReward=-354.13157894736867)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=49.339999999999996, nSimulations=40, avgReward=-476.65)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=20.31, nSimulations=15, avgReward=-464.59999999999997)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=0.8, nSimulations=1, avgReward=-520.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=2.41, nSimulations=2, avgReward=-479.5)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=51.49, nSimulations=30, avgReward=-428.3666666666667)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=6, pseudoWins=187.98999999999992, nSimulations=100, avgReward=-412.0099999999999)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=26.95999999999999, nSimulations=23, avgReward=-482.7826086956521)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=23.859999999999996, nSimulations=16, avgReward=-450.875)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=53, pseudoWins=1361.2200000000023, nSimulations=514, avgReward=-335.171206225681)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=8.870000000000001, nSimulations=8, avgReward=-489.125)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=11, pseudoWins=587.2200000000001, nSimulations=262, avgReward=-376.3320610687024)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=1.45, nSimulations=1, avgReward=-455.0)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=9.440000000000001, nSimulations=5, avgReward=-411.20000000000005)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=1.0, nSimulations=1, avgReward=-500.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, pseudoWins=36.959999999999994, nSimulations=24, avgReward=-446.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=3, pseudoWins=101.41, nSimulations=60, avgReward=-431.4499999999998)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=1, pseudoWins=95.42999999999998, nSimulations=67, avgReward=-457.73134328358196)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=13.65, nSimulations=7, avgReward=-405.00000000000006)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=1, pseudoWins=94.47000000000004, nSimulations=60, avgReward=-443.0166666666664)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=31, pseudoWins=1019.0899999999996, nSimulations=486, avgReward=-390.39094650205794)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=13.89, nSimulations=7, avgReward=-401.57142857142856)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=12.720000000000002, nSimulations=9, avgReward=-458.66666666666663)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, pseudoWins=42.46, nSimulations=11, avgReward=-213.99999999999997)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=3, pseudoWins=146.97000000000003, nSimulations=87, avgReward=-431.0689655172412)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=2.6399999999999997, nSimulations=2, avgReward=-468.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=2.92, nSimulations=2, avgReward=-454.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=5, pseudoWins=137.52000000000004, nSimulations=45, avgReward=-294.40000000000015)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=15.320000000000002, nSimulations=7, avgReward=-381.14285714285717)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=4, pseudoWins=536.98, nSimulations=217, avgReward=-352.6497695852535)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=13.690000000000001, nSimulations=6, avgReward=-371.83333333333337)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=3, pseudoWins=162.84, nSimulations=72, avgReward=-373.83333333333354)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=8.129999999999999, nSimulations=4, avgReward=-396.75)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=24.029999999999998, nSimulations=12, avgReward=-399.7499999999999)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=4, pseudoWins=1470.9899999999993, nSimulations=927, avgReward=-441.5231930960086)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=6.41, nSimulations=4, avgReward=-439.75)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=3.9800000000000004, nSimulations=4, avgReward=-500.5)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=4.890000000000001, nSimulations=2, avgReward=-355.5)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=16.189999999999998, nSimulations=8, avgReward=-397.625)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=2.1, nSimulations=2, avgReward=-495.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=2.21, nSimulations=2, avgReward=-489.5)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=2, pseudoWins=28.310000000000002, nSimulations=4, avgReward=107.75000000000003)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=6.3100000000000005, nSimulations=2, avgReward=-284.5)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=2.1900000000000004, nSimulations=2, avgReward=-490.5)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=5.0, nSimulations=4, avgReward=-475.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=11.17, nSimulations=7, avgReward=-440.42857142857144)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=4, pseudoWins=664.4599999999996, nSimulations=352, avgReward=-411.95454545454527)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=9, pseudoWins=276.56999999999994, nSimulations=92, avgReward=-299.6847826086956)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, pseudoWins=97.17, nSimulations=58, avgReward=-432.4655172413792)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=25.319999999999997, nSimulations=19, avgReward=-467.1052631578947)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=6.800000000000001, nSimulations=4, avgReward=-430.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=1.35, nSimulations=1, avgReward=-465.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=1, pseudoWins=18.57, nSimulations=5, avgReward=-228.60000000000002)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=53.839999999999996, nSimulations=42, avgReward=-471.80952380952374)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=14, pseudoWins=617.2899999999996, nSimulations=346, avgReward=-421.62427745664786)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=52.68, nSimulations=33, avgReward=-440.3636363636364)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=6.53, nSimulations=5, avgReward=-469.4)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=19.959999999999997, nSimulations=12, avgReward=-433.6666666666666)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=6.83, nSimulations=5, avgReward=-463.4)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=1.2, nSimulations=1, avgReward=-480.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=1.15, nSimulations=1, avgReward=-485.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=2, pseudoWins=65.17, nSimulations=39, avgReward=-432.89743589743586)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=6.199999999999999, nSimulations=3, avgReward=-393.33333333333337)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=74, pseudoWins=1895.9399999999991, nSimulations=772, avgReward=-354.4209844559586)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=3.1799999999999997, nSimulations=3, avgReward=-494.0)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=2.61, nSimulations=3, avgReward=-513.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=41.220000000000006, nSimulations=24, avgReward=-428.24999999999994)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=19.700000000000003, nSimulations=25, avgReward=-521.2)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, pseudoWins=40.919999999999995, nSimulations=24, avgReward=-429.49999999999994)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=5, pseudoWins=148.99999999999997, nSimulations=53, avgReward=-318.86792452830184)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=3, pseudoWins=146.9099999999999, nSimulations=84, avgReward=-425.10714285714295)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=12.21, nSimulations=7, avgReward=-425.5714285714286)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=40.83, nSimulations=31, avgReward=-468.29032258064524)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=1.76, nSimulations=1, avgReward=-424.0)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=57.29999999999999, nSimulations=51, avgReward=-487.64705882352916)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=12.93, nSimulations=8, avgReward=-438.375)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=1.19, nSimulations=1, avgReward=-481.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=15.479999999999997, nSimulations=10, avgReward=-445.2)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=14.120000000000001, nSimulations=8, avgReward=-423.5)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=53.59999999999999, nSimulations=24, avgReward=-376.66666666666674)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=21.04, nSimulations=14, avgReward=-449.7142857142857)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, pseudoWins=65.01, nSimulations=42, avgReward=-445.2142857142856)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=48, pseudoWins=1478.729999999999, nSimulations=719, avgReward=-394.3838664812239)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=100, pseudoWins=1989.4699999999984, nSimulations=719, avgReward=-323.33936022253147)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=2.05, nSimulations=2, avgReward=-497.5)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=2.96, nSimulations=1, avgReward=-304.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, pseudoWins=29.229999999999997, nSimulations=13, avgReward=-375.15384615384613)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=5, pseudoWins=235.43000000000004, nSimulations=120, avgReward=-403.80833333333356)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=1.05, nSimulations=1, avgReward=-495.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=3, pseudoWins=152.79000000000005, nSimulations=99, avgReward=-445.9494949494951)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=141.20999999999998, nSimulations=96, avgReward=-452.90625000000017)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=0.91, nSimulations=1, avgReward=-509.0)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=13, pseudoWins=590.3300000000002, nSimulations=200, avgReward=-305.1400000000002)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=13.32, nSimulations=5, avgReward=-333.6)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=1, pseudoWins=290.88, nSimulations=154, avgReward=-412.253246753247)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=16.12, nSimulations=12, avgReward=-465.66666666666663)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=1.39, nSimulations=1, avgReward=-461.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=2.98, nSimulations=3, avgReward=-500.66666666666663)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=3.8899999999999997, nSimulations=2, avgReward=-405.5)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=1.21, nSimulations=1, avgReward=-479.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=15, pseudoWins=532.5999999999997, nSimulations=280, avgReward=-409.9285714285715)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=4.35, nSimulations=2, avgReward=-382.5)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=9.11, nSimulations=4, avgReward=-372.25)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=21.28, nSimulations=9, avgReward=-363.55555555555554)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=22.990000000000002, nSimulations=15, avgReward=-446.73333333333335)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=7.109999999999999, nSimulations=5, avgReward=-457.80000000000007)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=2.9299999999999997, nSimulations=2, avgReward=-453.5)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, pseudoWins=48.080000000000005, nSimulations=21, avgReward=-371.047619047619)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=3.9299999999999997, nSimulations=4, avgReward=-501.75)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=8, pseudoWins=466.77999999999986, nSimulations=254, avgReward=-416.228346456693)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=3, pseudoWins=86.07000000000001, nSimulations=33, avgReward=-339.1818181818182)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=15.5, nSimulations=12, avgReward=-470.83333333333326)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=8.370000000000001, nSimulations=4, avgReward=-390.75)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=8.05, nSimulations=7, avgReward=-485.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=2, pseudoWins=120.44999999999999, nSimulations=48, avgReward=-349.7083333333332)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=3, pseudoWins=153.85000000000002, nSimulations=92, avgReward=-432.771739130435)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=46.830000000000005, nSimulations=47, avgReward=-500.3617021276596)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=59.669999999999995, nSimulations=39, avgReward=-447.00000000000017)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=1.92, nSimulations=2, avgReward=-504.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, pseudoWins=1820.0000000000016, nSimulations=1294, avgReward=-459.6313755795986)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=0.91, nSimulations=1, avgReward=-509.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=1, pseudoWins=23.919999999999998, nSimulations=12, avgReward=-400.66666666666663)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=125.57999999999998, nSimulations=86, avgReward=-453.9767441860464)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=1.56, nSimulations=2, avgReward=-522.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=94, pseudoWins=2095.289999999999, nSimulations=807, avgReward=-340.3605947955389)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=162.03000000000006, nSimulations=84, avgReward=-407.48809523809524)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=4.4799999999999995, nSimulations=2, avgReward=-376.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=33.300000000000004, nSimulations=23, avgReward=-455.5217391304348)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=8, pseudoWins=182.29000000000002, nSimulations=42, avgReward=-165.97619047619062)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=7, pseudoWins=175.07, nSimulations=81, avgReward=-383.8641975308642)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=8.9, nSimulations=6, avgReward=-451.6666666666667)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=4.37, nSimulations=4, avgReward=-490.75)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=40.61000000000001, nSimulations=24, avgReward=-430.79166666666663)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=12.110000000000001, nSimulations=7, avgReward=-427.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=12.979999999999999, nSimulations=7, avgReward=-414.5714285714286)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=4, pseudoWins=170.5800000000001, nSimulations=105, avgReward=-437.54285714285714)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=1, pseudoWins=40.849999999999994, nSimulations=16, avgReward=-344.6875)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, pseudoWins=16.259999999999998, nSimulations=2, avgReward=213.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=4.36, nSimulations=5, avgReward=-512.8000000000001)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=11.63, nSimulations=6, avgReward=-406.1666666666667)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=2.35, nSimulations=1, avgReward=-365.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=8.059999999999999, nSimulations=6, avgReward=-465.66666666666663)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=11.399999999999999, nSimulations=6, avgReward=-410.0)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=8, pseudoWins=707.9499999999998, nSimulations=341, avgReward=-392.9442815249266)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=0.92, nSimulations=1, avgReward=-508.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=19.42, nSimulations=6, avgReward=-276.3333333333333)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=6.21, nSimulations=2, avgReward=-289.5)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=12.059999999999999, nSimulations=8, avgReward=-449.25)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=2.3499999999999996, nSimulations=2, avgReward=-482.5)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=4, pseudoWins=284.94000000000005, nSimulations=153, avgReward=-414.7320261437908)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=2.84, nSimulations=1, avgReward=-316.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=8.79, nSimulations=8, avgReward=-490.12499999999994)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=4.63, nSimulations=4, avgReward=-484.24999999999994)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=1.22, nSimulations=1, avgReward=-478.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=11.02, nSimulations=7, avgReward=-443.8571428571429)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=23, pseudoWins=886.4799999999992, nSimulations=319, avgReward=-322.88401253918494)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=6, pseudoWins=174.8499999999999, nSimulations=88, avgReward=-401.3068181818182)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=23, pseudoWins=1983.5299999999977, nSimulations=929, avgReward=-386.71151776103324)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=4.59, nSimulations=3, avgReward=-447.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=23.349999999999998, nSimulations=17, avgReward=-462.64705882352945)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=12.91, nSimulations=7, avgReward=-415.57142857142856)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=7.8, nSimulations=4, avgReward=-405.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=4.84, nSimulations=5, avgReward=-503.2)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=3, pseudoWins=268.02999999999986, nSimulations=134, avgReward=-400.7686567164181)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=3.84, nSimulations=4, avgReward=-504.0)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=2, pseudoWins=85.37, nSimulations=46, avgReward=-414.4130434782608)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=1, pseudoWins=114.95000000000003, nSimulations=42, avgReward=-326.3095238095239)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=3.2600000000000002, nSimulations=3, avgReward=-491.33333333333326)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=5, pseudoWins=229.11999999999992, nSimulations=97, avgReward=-365.278350515464)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=4.95, nSimulations=3, avgReward=-435.0)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=4.46, nSimulations=2, avgReward=-377.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=0.86, nSimulations=1, avgReward=-514.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=4.16, nSimulations=2, avgReward=-392.0)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=1.65, nSimulations=1, avgReward=-435.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=209.97, nSimulations=113, avgReward=-415.1415929203542)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=0.86, nSimulations=1, avgReward=-514.0)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, pseudoWins=118.03000000000004, nSimulations=75, avgReward=-442.6266666666667)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=1, pseudoWins=224.58, nSimulations=123, avgReward=-417.528455284553)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=8.690000000000001, nSimulations=7, avgReward=-475.8571428571429)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=47.90999999999999, nSimulations=27, avgReward=-422.5555555555556)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=3, pseudoWins=95.85000000000001, nSimulations=50, avgReward=-408.3)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, pseudoWins=117.15, nSimulations=73, avgReward=-439.5205479452055)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=8, pseudoWins=335.19999999999993, nSimulations=176, avgReward=-409.54545454545496)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=30, pseudoWins=1769.0999999999988, nSimulations=667, avgReward=-334.8740629685162)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=7.83, nSimulations=5, avgReward=-443.4)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=41.22999999999999, nSimulations=42, avgReward=-501.8333333333335)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=13.84, nSimulations=5, avgReward=-323.2)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=16, pseudoWins=622.7799999999994, nSimulations=325, avgReward=-408.3753846153851)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=20.53, nSimulations=21, avgReward=-502.2380952380952)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=1.35, nSimulations=1, avgReward=-465.0)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=39.87000000000001, nSimulations=40, avgReward=-500.32499999999993)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=13.899999999999999, nSimulations=7, avgReward=-401.4285714285715)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=8, pseudoWins=257.75000000000006, nSimulations=95, avgReward=-328.68421052631595)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=22.79, nSimulations=9, avgReward=-346.7777777777777)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=1.68, nSimulations=2, avgReward=-516.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, pseudoWins=14.520000000000001, nSimulations=2, avgReward=126.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=2.09, nSimulations=2, avgReward=-495.5)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=5.8, nSimulations=3, avgReward=-406.66666666666663)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=11.32, nSimulations=9, avgReward=-474.2222222222222)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=1.98, nSimulations=2, avgReward=-501.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=5.12, nSimulations=5, avgReward=-497.6)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=5, pseudoWins=221.54000000000005, nSimulations=120, avgReward=-415.38333333333344)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=22, pseudoWins=1417.8399999999995, nSimulations=581, avgReward=-356.5920826161793)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=0.94, nSimulations=1, avgReward=-506.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=1.24, nSimulations=1, avgReward=-476.0)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=11.79, nSimulations=7, avgReward=-431.57142857142856)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, pseudoWins=21.309999999999995, nSimulations=5, avgReward=-173.8)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=0.9, nSimulations=1, avgReward=-510.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=122.71999999999997, nSimulations=92, avgReward=-466.77173913043487)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=9.68, nSimulations=9, avgReward=-492.44444444444446)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=116.77000000000007, nSimulations=100, avgReward=-483.2299999999999)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, pseudoWins=22.93, nSimulations=10, avgReward=-370.69999999999993)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=67, pseudoWins=1427.6099999999985, nSimulations=510, avgReward=-320.0764705882355)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, pseudoWins=15.49, nSimulations=3, avgReward=-83.66666666666669)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, pseudoWins=48.550000000000004, nSimulations=15, avgReward=-276.33333333333337)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=1.41, nSimulations=1, avgReward=-459.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=3, pseudoWins=557.0499999999996, nSimulations=287, avgReward=-406.2891986062718)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=173.26999999999998, nSimulations=97, avgReward=-421.52577319587635)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=2, pseudoWins=57.11999999999999, nSimulations=26, avgReward=-380.3076923076924)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=8, pseudoWins=193.36, nSimulations=69, avgReward=-319.7681159420291)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=2.99, nSimulations=1, avgReward=-301.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=1.19, nSimulations=1, avgReward=-481.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=20.509999999999998, nSimulations=9, avgReward=-372.1111111111111)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=0.91, nSimulations=1, avgReward=-509.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=4, pseudoWins=169.69000000000003, nSimulations=96, avgReward=-423.23958333333326)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=3, pseudoWins=191.98999999999995, nSimulations=119, avgReward=-438.7815126050423)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=1.33, nSimulations=1, avgReward=-467.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=4.16, nSimulations=2, avgReward=-392.0)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=7.87, nSimulations=5, avgReward=-442.6)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=13.07, nSimulations=6, avgReward=-382.1666666666667)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=3.25, nSimulations=4, avgReward=-518.75)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=7.76, nSimulations=4, avgReward=-406.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=8.02, nSimulations=6, avgReward=-466.33333333333337)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=7.210000000000001, nSimulations=5, avgReward=-455.8)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=0.95, nSimulations=1, avgReward=-505.0)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=111, pseudoWins=2355.45, nSimulations=887, avgReward=-334.4791431792563)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=5.84, nSimulations=4, avgReward=-454.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=5.890000000000001, nSimulations=4, avgReward=-452.74999999999994)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=52, pseudoWins=1194.0399999999997, nSimulations=468, avgReward=-344.8632478632482)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=92.25999999999999, nSimulations=49, avgReward=-412.18367346938766)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=0.87, nSimulations=1, avgReward=-513.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=28.360000000000003, nSimulations=19, avgReward=-450.7368421052631)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=21.849999999999998, nSimulations=14, avgReward=-443.92857142857144)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=217.69000000000003, nSimulations=121, avgReward=-421.11570247933923)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=28.230000000000004, nSimulations=19, avgReward=-451.4210526315789)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=2, pseudoWins=142.13, nSimulations=44, avgReward=-276.9772727272727)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=11, pseudoWins=469.8100000000001, nSimulations=249, avgReward=-411.3212851405624)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=104, pseudoWins=2368.82, nSimulations=798, avgReward=-303.1553884711783)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=6.6, nSimulations=5, avgReward=-468.00000000000006)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=5, pseudoWins=113.4, nSimulations=55, avgReward=-393.8181818181819)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=54, pseudoWins=1428.3699999999985, nSimulations=630, avgReward=-373.35555555555527)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=68, pseudoWins=1674.6899999999998, nSimulations=653, avgReward=-343.6003062787133)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=6.579999999999999, nSimulations=4, avgReward=-435.5)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=51.050000000000004, nSimulations=46, avgReward=-489.63043478260875)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=3, pseudoWins=134.19999999999996, nSimulations=65, avgReward=-393.5384615384614)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, pseudoWins=29.319999999999997, nSimulations=12, avgReward=-355.66666666666663)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=2, pseudoWins=364.14999999999975, nSimulations=231, avgReward=-443.0995670995674)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=20, pseudoWins=663.66, nSimulations=168, avgReward=-205.01785714285748)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=54.55000000000001, nSimulations=44, avgReward=-476.0227272727273)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=1.1, nSimulations=1, avgReward=-490.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=62, pseudoWins=1493.720000000001, nSimulations=622, avgReward=-359.8520900321539)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=2, pseudoWins=294.8500000000001, nSimulations=149, avgReward=-403.0067114093957)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=64.95, nSimulations=48, avgReward=-464.6875000000001)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=0.71, nSimulations=1, avgReward=-529.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=0.86, nSimulations=1, avgReward=-514.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, pseudoWins=86.66999999999999, nSimulations=52, avgReward=-433.3269230769231)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=24.62, nSimulations=16, avgReward=-446.12499999999994)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=15, pseudoWins=780.6299999999994, nSimulations=403, avgReward=-406.2952853598015)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=1.07, nSimulations=1, avgReward=-493.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=5, pseudoWins=141.48, nSimulations=34, avgReward=-183.8823529411765)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=1, pseudoWins=63.31000000000001, nSimulations=48, avgReward=-468.10416666666663)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=9.32, nSimulations=8, avgReward=-483.49999999999994)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=9.33, nSimulations=5, avgReward=-413.40000000000003)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=4, pseudoWins=188.98, nSimulations=99, avgReward=-409.11111111111114)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=2, pseudoWins=60.32000000000001, nSimulations=20, avgReward=-302.84999999999997)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=17.599999999999998, nSimulations=15, avgReward=-482.66666666666663)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=5.07, nSimulations=3, avgReward=-431.0)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=39.65, nSimulations=26, avgReward=-447.5)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=27.819999999999997, nSimulations=11, avgReward=-347.0909090909091)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=3, pseudoWins=112.52000000000001, nSimulations=50, avgReward=-375.09999999999985)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, pseudoWins=21.709999999999997, nSimulations=8, avgReward=-328.625)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=1, pseudoWins=96.42999999999999, nSimulations=79, avgReward=-477.93670886075944)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=117, pseudoWins=2542.5999999999985, nSimulations=921, avgReward=-323.96091205211746)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, pseudoWins=14.77, nSimulations=2, avgReward=138.5)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, pseudoWins=16.52, nSimulations=2, avgReward=226.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=1, pseudoWins=54.18999999999999, nSimulations=32, avgReward=-430.65624999999994)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=48.83, nSimulations=37, avgReward=-468.02702702702703)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=2.2, nSimulations=2, avgReward=-490.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=0.87, nSimulations=1, avgReward=-513.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=8.55, nSimulations=6, avgReward=-457.5)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=3, pseudoWins=93.56, nSimulations=57, avgReward=-435.85964912280696)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=3, pseudoWins=144.59000000000003, nSimulations=88, avgReward=-436.0113636363635)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=2.1100000000000003, nSimulations=2, avgReward=-494.5)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=14.740000000000002, nSimulations=12, avgReward=-477.1666666666667)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=4.2299999999999995, nSimulations=4, avgReward=-494.24999999999994)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=16.299999999999997, nSimulations=9, avgReward=-418.8888888888889)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=1.04, nSimulations=1, avgReward=-496.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=4.33, nSimulations=2, avgReward=-383.5)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=20, pseudoWins=792.1499999999999, nSimulations=286, avgReward=-323.37762237762246)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=5.66, nSimulations=4, avgReward=-458.5)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=2.3899999999999997, nSimulations=2, avgReward=-480.5)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=1.75, nSimulations=1, avgReward=-425.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=71, pseudoWins=1507.139999999999, nSimulations=546, avgReward=-323.97985347985326)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=68.74999999999999, nSimulations=60, avgReward=-485.41666666666646)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, pseudoWins=48.02, nSimulations=25, avgReward=-407.91999999999996)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=1.06, nSimulations=1, avgReward=-494.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=16.819999999999997, nSimulations=12, avgReward=-459.8333333333333)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=26, pseudoWins=1504.8399999999988, nSimulations=563, avgReward=-333.3214920071051)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, pseudoWins=2929.550000000002, nSimulations=1906, avgReward=-446.60073452255915)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=49.89999999999999, nSimulations=42, avgReward=-481.357142857143)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=0.94, nSimulations=1, avgReward=-506.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=0.87, nSimulations=1, avgReward=-513.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=3.19, nSimulations=1, avgReward=-281.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=45, pseudoWins=1566.340000000002, nSimulations=766, avgReward=-395.56919060052223)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=121.32000000000001, nSimulations=83, avgReward=-453.975903614458)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=12, pseudoWins=609.6699999999998, nSimulations=373, avgReward=-436.5495978552281)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=2.4, nSimulations=3, avgReward=-520.0)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=7.25, nSimulations=5, avgReward=-455.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, pseudoWins=49.46000000000001, nSimulations=23, avgReward=-384.95652173913027)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=50.76, nSimulations=37, avgReward=-462.81081081081095)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=0.72, nSimulations=1, avgReward=-528.0)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=4, pseudoWins=312.7899999999998, nSimulations=144, avgReward=-383.1944444444445)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=18.830000000000002, nSimulations=11, avgReward=-428.81818181818187)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=6, pseudoWins=228.4399999999999, nSimulations=99, avgReward=-370.70707070707084)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, pseudoWins=22.369999999999997, nSimulations=6, avgReward=-227.1666666666667)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=4, pseudoWins=213.66000000000003, nSimulations=107, avgReward=-400.42990654205624)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=1, pseudoWins=23.23, nSimulations=7, avgReward=-268.1428571428571)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=2, pseudoWins=413.83, nSimulations=226, avgReward=-416.88938053097354)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=1.77, nSimulations=2, avgReward=-511.5)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=92, pseudoWins=2126.9699999999993, nSimulations=843, avgReward=-347.7461447212337)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=1, pseudoWins=40.300000000000004, nSimulations=17, avgReward=-362.9411764705882)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=103, pseudoWins=2232.659999999997, nSimulations=837, avgReward=-333.2962962962965)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=3.65, nSimulations=2, avgReward=-417.5)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=26.92, nSimulations=15, avgReward=-420.53333333333336)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=4.92, nSimulations=3, avgReward=-436.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=1.0, nSimulations=1, avgReward=-500.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=4.05, nSimulations=2, avgReward=-397.5)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=11.34, nSimulations=8, avgReward=-458.25000000000006)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=4.93, nSimulations=5, avgReward=-501.4)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=3.7299999999999995, nSimulations=3, avgReward=-475.66666666666663)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=1.16, nSimulations=1, avgReward=-484.0)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=11.27, nSimulations=8, avgReward=-459.12499999999994)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=30.279999999999998, nSimulations=27, avgReward=-487.85185185185185)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=28.240000000000002, nSimulations=23, avgReward=-477.21739130434776)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=1.24, nSimulations=1, avgReward=-476.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=3.19, nSimulations=1, avgReward=-281.0)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=4.76, nSimulations=3, avgReward=-441.33333333333326)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=4, pseudoWins=117.16999999999999, nSimulations=58, avgReward=-397.98275862068954)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=3.48, nSimulations=4, avgReward=-513.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=27, pseudoWins=763.7299999999999, nSimulations=337, avgReward=-373.37388724035645)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=61.910000000000004, nSimulations=44, avgReward=-459.5454545454546)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=3.22, nSimulations=1, avgReward=-278.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=1.06, nSimulations=1, avgReward=-494.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=3.3200000000000003, nSimulations=2, avgReward=-434.0)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=3.21, nSimulations=1, avgReward=-279.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=5.48, nSimulations=2, avgReward=-326.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, pseudoWins=61.800000000000004, nSimulations=27, avgReward=-371.11111111111103)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=3, pseudoWins=241.59999999999997, nSimulations=147, avgReward=-435.7755102040816)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=12.290000000000001, nSimulations=7, avgReward=-424.4285714285714)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=3.56, nSimulations=2, avgReward=-422.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=1.21, nSimulations=1, avgReward=-479.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=11.23, nSimulations=6, avgReward=-412.83333333333337)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=9.100000000000001, nSimulations=7, avgReward=-470.00000000000006)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=10.36, nSimulations=5, avgReward=-392.79999999999995)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=152.76999999999992, nSimulations=93, avgReward=-435.731182795699)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=17, pseudoWins=666.9100000000001, nSimulations=362, avgReward=-415.8480662983425)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=14.030000000000001, nSimulations=7, avgReward=-399.57142857142856)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=16.07, nSimulations=9, avgReward=-421.44444444444446)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=2.9, nSimulations=3, avgReward=-503.33333333333337)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=10.81, nSimulations=9, avgReward=-489.77777777777777)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=3, pseudoWins=175.5600000000001, nSimulations=102, avgReward=-427.8823529411766)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=5.8500000000000005, nSimulations=4, avgReward=-453.75)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=0.47, nSimulations=1, avgReward=-553.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=11.55, nSimulations=5, avgReward=-369.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, pseudoWins=85.58999999999999, nSimulations=56, avgReward=-447.16071428571405)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, pseudoWins=75.30000000000003, nSimulations=62, avgReward=-478.54838709677404)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=4.050000000000001, nSimulations=2, avgReward=-397.5)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, pseudoWins=140.44000000000003, nSimulations=92, avgReward=-447.3478260869563)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=24.009999999999998, nSimulations=10, avgReward=-359.9)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=4.03, nSimulations=4, avgReward=-521.5)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=1, pseudoWins=18.82, nSimulations=4, avgReward=-129.5)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=2.94, nSimulations=3, avgReward=-502.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=53.54999999999999, nSimulations=48, avgReward=-488.4375)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=17, pseudoWins=518.3000000000002, nSimulations=247, avgReward=-390.1619433198377)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=24.85, nSimulations=14, avgReward=-422.50000000000006)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=1.12, nSimulations=1, avgReward=-488.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=1.9700000000000002, nSimulations=2, avgReward=-501.5)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=2.01, nSimulations=2, avgReward=-499.5)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=3, pseudoWins=105.21000000000002, nSimulations=56, avgReward=-412.12500000000006)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=8.02, nSimulations=7, avgReward=-485.42857142857144)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=9.42, nSimulations=7, avgReward=-465.42857142857144)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=199.72000000000014, nSimulations=124, avgReward=-440.4596774193546)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=75.91999999999999, nSimulations=52, avgReward=-454.0)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=20.68, nSimulations=8, avgReward=-341.5)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=61, pseudoWins=1386.1599999999994, nSimulations=582, avgReward=-361.87628865979354)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=22.96, nSimulations=19, avgReward=-479.1578947368421)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=22.360000000000003, nSimulations=18, avgReward=-475.77777777777777)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=3.3200000000000003, nSimulations=2, avgReward=-434.0)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=17, pseudoWins=679.81, nSimulations=366, avgReward=-414.25956284153034)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=10.49, nSimulations=8, avgReward=-468.875)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=8, pseudoWins=348.42999999999995, nSimulations=176, avgReward=-402.0284090909091)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=131.5600000000001, nSimulations=96, avgReward=-462.95833333333337)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=75.00999999999999, nSimulations=47, avgReward=-440.55319148936167)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=1, pseudoWins=33.58, nSimulations=12, avgReward=-320.1666666666667)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, pseudoWins=95.82, nSimulations=77, avgReward=-475.55844155844164)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=15.09, nSimulations=8, avgReward=-411.375)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=68, pseudoWins=1625.849999999999, nSimulations=655, avgReward=-351.7893129770998)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=31, pseudoWins=900.8500000000004, nSimulations=384, avgReward=-365.4036458333328)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=16.71, nSimulations=9, avgReward=-414.33333333333326)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=4, pseudoWins=504.29999999999984, nSimulations=242, avgReward=-392.09090909090924)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=50.36999999999999, nSimulations=38, avgReward=-467.4473684210528)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=83.55000000000003, nSimulations=40, avgReward=-394.72499999999997)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=8.040000000000001, nSimulations=4, avgReward=-399.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, pseudoWins=43.43, nSimulations=21, avgReward=-393.19047619047603)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=92.03, nSimulations=57, avgReward=-438.5438596491226)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=1.15, nSimulations=1, avgReward=-485.0)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=6.09, nSimulations=2, avgReward=-295.5)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=6, pseudoWins=2951.7999999999984, nSimulations=1890, avgReward=-444.15238095238044)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=7.91, nSimulations=8, avgReward=-501.12500000000006)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=9.12, nSimulations=4, avgReward=-394.25)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=7.42, nSimulations=7, avgReward=-494.00000000000006)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=5, pseudoWins=88.97999999999999, nSimulations=33, avgReward=-330.3636363636364)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, pseudoWins=105.70000000000003, nSimulations=50, avgReward=-388.59999999999997)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=2.82, nSimulations=1, avgReward=-318.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=4.74, nSimulations=5, avgReward=-505.2)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=2, pseudoWins=68.41, nSimulations=19, avgReward=-244.6315789473683)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=13.030000000000001, nSimulations=3, avgReward=-165.66666666666666)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=1, pseudoWins=81.76, nSimulations=60, avgReward=-464.2)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=14.14, nSimulations=10, avgReward=-458.59999999999997)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=3.8600000000000003, nSimulations=2, avgReward=-407.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=36.5, nSimulations=24, avgReward=-448.87499999999994)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=14.190000000000001, nSimulations=5, avgReward=-316.20000000000005)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=14.6, nSimulations=9, avgReward=-437.7777777777777)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=58.669999999999995, nSimulations=30, avgReward=-404.43333333333334)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=6.1899999999999995, nSimulations=4, avgReward=-445.24999999999994)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=3, pseudoWins=129.62000000000003, nSimulations=40, avgReward=-278.1750000000001)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=6.59, nSimulations=7, avgReward=-505.8571428571428)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=15.049999999999999, nSimulations=9, avgReward=-432.77777777777777)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=15.68, nSimulations=9, avgReward=-425.77777777777777)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, pseudoWins=14.35, nSimulations=2, avgReward=117.5)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=5.99, nSimulations=2, avgReward=-300.5)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=5, pseudoWins=258.35, nSimulations=109, avgReward=-364.1192660550459)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=4.0, nSimulations=4, avgReward=-517.75)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=1.1, nSimulations=1, avgReward=-490.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=1, pseudoWins=17.41, nSimulations=3, avgReward=-19.66666666666667)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=2, pseudoWins=306.93999999999994, nSimulations=140, avgReward=-381.39285714285717)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=4.03, nSimulations=4, avgReward=-499.25)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, pseudoWins=17.28, nSimulations=3, avgReward=-24.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=12.94, nSimulations=8, avgReward=-438.25000000000006)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=231.6200000000001, nSimulations=161, avgReward=-456.22981366459663)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=36.849999999999994, nSimulations=34, avgReward=-491.6176470588235)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=1, pseudoWins=105.39, nSimulations=86, avgReward=-477.453488372093)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=4.15, nSimulations=4, avgReward=-496.25)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=9.15, nSimulations=3, avgReward=-295.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=0.98, nSimulations=1, avgReward=-502.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=20.59, nSimulations=6, avgReward=-256.8333333333333)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=20, pseudoWins=593.3100000000001, nSimulations=165, avgReward=-241.5515151515152)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=13.93, nSimulations=7, avgReward=-401.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=37.04999999999999, nSimulations=26, avgReward=-463.6538461538461)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=35, pseudoWins=2176.339999999997, nSimulations=904, avgReward=-359.6515486725665)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=7, pseudoWins=189.65000000000003, nSimulations=82, avgReward=-368.7195121951221)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=30.97, nSimulations=14, avgReward=-378.7857142857143)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=4, pseudoWins=117.25999999999999, nSimulations=31, avgReward=-221.741935483871)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=1.25, nSimulations=1, avgReward=-475.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=20, pseudoWins=1975.1600000000003, nSimulations=1022, avgReward=-407.1076320939341)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=10.12, nSimulations=4, avgReward=-347.0)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=131.48, nSimulations=94, avgReward=-460.12765957446817)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=1.05, nSimulations=1, avgReward=-495.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=2.22, nSimulations=2, avgReward=-489.0)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=6.33, nSimulations=5, avgReward=-473.4)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=1, pseudoWins=39.63999999999999, nSimulations=14, avgReward=-316.8571428571429)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=2.03, nSimulations=2, avgReward=-498.5)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=13, pseudoWins=575.1500000000004, nSimulations=308, avgReward=-413.3928571428571)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=3.02, nSimulations=1, avgReward=-298.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=39.21000000000001, nSimulations=42, avgReward=-506.64285714285705)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=51, pseudoWins=1173.6799999999994, nSimulations=453, avgReward=-340.90949227373125)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=7, pseudoWins=166.51999999999998, nSimulations=74, avgReward=-374.97297297297274)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=1.15, nSimulations=1, avgReward=-485.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=4.26, nSimulations=4, avgReward=-493.5)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=14.52, nSimulations=9, avgReward=-438.66666666666663)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=4.67, nSimulations=4, avgReward=-483.25)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=4, pseudoWins=88.96, nSimulations=33, avgReward=-330.4242424242424)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=2, pseudoWins=117.71999999999998, nSimulations=54, avgReward=-381.9999999999999)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=5, pseudoWins=93.61, nSimulations=22, avgReward=-174.49999999999991)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=62.329999999999984, nSimulations=38, avgReward=-435.97368421052636)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=8.600000000000001, nSimulations=6, avgReward=-456.6666666666667)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=1.0, nSimulations=1, avgReward=-500.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, pseudoWins=51.44999999999999, nSimulations=25, avgReward=-394.20000000000005)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=8.440000000000001, nSimulations=7, avgReward=-479.42857142857144)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=10, pseudoWins=196.78, nSimulations=39, avgReward=-95.43589743589745)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=8.19, nSimulations=5, avgReward=-436.20000000000005)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=4.31, nSimulations=3, avgReward=-456.33333333333337)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=21.380000000000003, nSimulations=15, avgReward=-457.46666666666675)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=19.609999999999996, nSimulations=14, avgReward=-461.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=1.16, nSimulations=1, avgReward=-484.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=58.71000000000001, nSimulations=38, avgReward=-448.68421052631584)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=7.98, nSimulations=7, avgReward=-485.99999999999994)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=23.350000000000005, nSimulations=17, avgReward=-473.7647058823529)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=36, pseudoWins=2066.3199999999974, nSimulations=776, avgReward=-334.05541237113334)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=130.12, nSimulations=87, avgReward=-450.4367816091953)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=90.29999999999995, nSimulations=62, avgReward=-454.3548387096772)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=4.260000000000001, nSimulations=4, avgReward=-493.5)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=9, pseudoWins=244.04999999999995, nSimulations=116, avgReward=-389.9568965517244)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=6.2700000000000005, nSimulations=6, avgReward=-495.50000000000006)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=4, pseudoWins=219.47, nSimulations=129, avgReward=-431.4418604651165)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=72.68000000000002, nSimulations=34, avgReward=-386.2352941176471)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=1.35, nSimulations=1, avgReward=-465.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=5.88, nSimulations=4, avgReward=-453.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=2.59, nSimulations=3, avgReward=-513.6666666666666)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, pseudoWins=469.27000000000015, nSimulations=284, avgReward=-435.01408450704247)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=14.03, nSimulations=11, avgReward=-472.45454545454544)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=35, pseudoWins=988.9800000000001, nSimulations=465, avgReward=-387.3913978494617)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=2, pseudoWins=176.81000000000012, nSimulations=91, avgReward=-405.70329670329664)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=11.0, nSimulations=5, avgReward=-380.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=3.3099999999999996, nSimulations=3, avgReward=-489.66666666666663)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=46, pseudoWins=1263.6899999999996, nSimulations=581, avgReward=-382.5456110154906)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=31.650000000000002, nSimulations=25, avgReward=-473.4)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=50.5, nSimulations=27, avgReward=-412.962962962963)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, pseudoWins=26.409999999999997, nSimulations=12, avgReward=-379.91666666666663)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=11.399999999999999, nSimulations=10, avgReward=-485.99999999999994)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, pseudoWins=101.02999999999999, nSimulations=75, avgReward=-465.2933333333331)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=107.75999999999998, nSimulations=76, avgReward=-458.513157894737)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=2, pseudoWins=284.4000000000001, nSimulations=150, avgReward=-410.49999999999983)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=7, pseudoWins=235.63999999999993, nSimulations=112, avgReward=-389.607142857143)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=4, pseudoWins=142.99999999999994, nSimulations=69, avgReward=-392.75362318840564)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, pseudoWins=37.44, nSimulations=23, avgReward=-437.217391304348)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=0.87, nSimulations=1, avgReward=-513.0)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=12.059999999999999, nSimulations=10, avgReward=-479.4)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=5, pseudoWins=113.19, nSimulations=32, avgReward=-249.06249999999994)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=1.78, nSimulations=1, avgReward=-422.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=2.0, nSimulations=1, avgReward=-400.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=2.19, nSimulations=3, avgReward=-556.6666666666666)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=10.15, nSimulations=8, avgReward=-473.12499999999994)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=3.37, nSimulations=3, avgReward=-487.66666666666663)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=0.96, nSimulations=1, avgReward=-504.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=3.34, nSimulations=3, avgReward=-488.66666666666663)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=1.31, nSimulations=1, avgReward=-469.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=16.049999999999997, nSimulations=11, avgReward=-454.0909090909092)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=4.1899999999999995, nSimulations=2, avgReward=-390.5)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=4.22, nSimulations=2, avgReward=-389.0)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=11, pseudoWins=492.63999999999965, nSimulations=168, avgReward=-306.9285714285714)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=6.199999999999999, nSimulations=6, avgReward=-496.6666666666667)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=15.649999999999999, nSimulations=12, avgReward=-469.5833333333333)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=1, pseudoWins=54.970000000000006, nSimulations=35, avgReward=-442.942857142857)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=12.680000000000001, nSimulations=8, avgReward=-441.5)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=35.19, nSimulations=16, avgReward=-380.06250000000006)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=10.86, nSimulations=9, avgReward=-479.3333333333333)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=7, pseudoWins=199.36999999999998, nSimulations=91, avgReward=-380.912087912088)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=3.19, nSimulations=1, avgReward=-281.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, pseudoWins=56.58999999999999, nSimulations=36, avgReward=-442.8055555555557)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=13, pseudoWins=470.16999999999996, nSimulations=150, avgReward=-286.5533333333335)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=129, pseudoWins=2615.6899999999964, nSimulations=885, avgReward=-304.4418079096047)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=7.839999999999999, nSimulations=6, avgReward=-469.33333333333337)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=5, pseudoWins=190.71, nSimulations=97, avgReward=-403.3917525773195)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, pseudoWins=269.7300000000001, nSimulations=149, avgReward=-419.8255033557048)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, pseudoWins=36.48, nSimulations=13, avgReward=-319.38461538461536)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, pseudoWins=43.199999999999996, nSimulations=27, avgReward=-439.99999999999994)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=45, pseudoWins=1497.6199999999985, nSimulations=483, avgReward=-290.45548654244294)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=10.290000000000001, nSimulations=6, avgReward=-428.5)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=3.26, nSimulations=1, avgReward=-274.0)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=1.13, nSimulations=1, avgReward=-487.0)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=1.21, nSimulations=1, avgReward=-479.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=3.38, nSimulations=1, avgReward=-262.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=1.02, nSimulations=1, avgReward=-498.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=77.98999999999995, nSimulations=65, avgReward=-480.01538461538456)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=7.3100000000000005, nSimulations=4, avgReward=-417.25)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=4.75, nSimulations=5, avgReward=-505.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=0.96, nSimulations=1, avgReward=-504.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=23.18, nSimulations=15, avgReward=-445.46666666666675)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=17.99, nSimulations=5, avgReward=-240.20000000000002)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=20, pseudoWins=622.8, nSimulations=298, avgReward=-391.006711409396)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=23.01, nSimulations=13, avgReward=-423.00000000000006)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=2, pseudoWins=137.01999999999998, nSimulations=70, avgReward=-404.2571428571429)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=48, pseudoWins=1019.8299999999998, nSimulations=348, avgReward=-306.94540229885047)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=9.12, nSimulations=8, avgReward=-486.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=26.750000000000004, nSimulations=17, avgReward=-442.64705882352945)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=63.92999999999999, nSimulations=48, avgReward=-466.81250000000006)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=2.05, nSimulations=2, avgReward=-497.5)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=4.430000000000001, nSimulations=4, avgReward=-489.25)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=2, pseudoWins=146.23999999999998, nSimulations=83, avgReward=-423.8072289156626)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=14.7, nSimulations=8, avgReward=-416.25000000000006)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=1.12, nSimulations=1, avgReward=-488.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=6, pseudoWins=361.3400000000003, nSimulations=172, avgReward=-390.9127906976743)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=3.26, nSimulations=1, avgReward=-274.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=2, pseudoWins=47.16, nSimulations=11, avgReward=-171.27272727272725)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=2, pseudoWins=342.03, nSimulations=201, avgReward=-430.4626865671642)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=3.12, nSimulations=1, avgReward=-288.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=3.0600000000000005, nSimulations=3, avgReward=-498.0)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, pseudoWins=130.47000000000003, nSimulations=63, avgReward=-392.9047619047617)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=3, pseudoWins=129.85999999999999, nSimulations=66, avgReward=-403.24242424242425)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=104, pseudoWins=2112.1499999999987, nSimulations=745, avgReward=-316.5046979865774)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=84.57000000000002, nSimulations=61, avgReward=-461.3606557377047)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=7, pseudoWins=245.4499999999999, nSimulations=122, avgReward=-398.8114754098364)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=10.950000000000001, nSimulations=6, avgReward=-417.50000000000006)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=30.810000000000002, nSimulations=16, avgReward=-407.43750000000006)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=0.88, nSimulations=1, avgReward=-512.0)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=1, pseudoWins=127.54999999999997, nSimulations=82, avgReward=-444.45121951219517)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=12, pseudoWins=539.39, nSimulations=276, avgReward=-404.56884057971)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=65.36, nSimulations=38, avgReward=-428.1842105263158)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=139.44000000000003, nSimulations=81, avgReward=-427.85185185185196)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=8.23, nSimulations=4, avgReward=-394.25)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=49.40999999999999, nSimulations=35, avgReward=-458.82857142857154)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=17.98, nSimulations=14, avgReward=-471.57142857142867)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=19.49, nSimulations=8, avgReward=-356.375)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=3, pseudoWins=78.51, nSimulations=39, avgReward=-398.6923076923077)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=7.63, nSimulations=5, avgReward=-447.4)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=8.23, nSimulations=7, avgReward=-482.42857142857156)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, pseudoWins=18.7, nSimulations=4, avgReward=-132.5)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=4, pseudoWins=156.12, nSimulations=79, avgReward=-402.73417721518996)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=2, pseudoWins=121.21999999999998, nSimulations=78, avgReward=-444.5897435897436)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=1.17, nSimulations=1, avgReward=-483.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=9, pseudoWins=253.7000000000001, nSimulations=121, avgReward=-390.3884297520663)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=3, pseudoWins=168.65, nSimulations=93, avgReward=-418.65591397849454)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=2, pseudoWins=45.17999999999999, nSimulations=18, avgReward=-348.99999999999994)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=10.549999999999999, nSimulations=8, avgReward=-468.125)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=24.37, nSimulations=16, avgReward=-447.6875)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=2, pseudoWins=68.01, nSimulations=32, avgReward=-387.4687499999999)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=0.94, nSimulations=1, avgReward=-506.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=3.84, nSimulations=4, avgReward=-504.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=3, pseudoWins=168.89000000000001, nSimulations=99, avgReward=-429.40404040404053)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=14.700000000000001, nSimulations=7, avgReward=-390.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=3, pseudoWins=540.79, nSimulations=288, avgReward=-412.3888888888889)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, pseudoWins=788.9599999999996, nSimulations=467, avgReward=-431.28479657387584)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=95.05999999999997, nSimulations=59, avgReward=-438.88135593220323)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=10.020000000000001, nSimulations=6, avgReward=-433.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=7.18, nSimulations=6, avgReward=-480.3333333333334)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=60, pseudoWins=1386.8399999999986, nSimulations=570, avgReward=-356.7631578947374)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=1.01, nSimulations=1, avgReward=-499.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=4, pseudoWins=820.7599999999994, nSimulations=499, avgReward=-436.2484969939881)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=3.12, nSimulations=3, avgReward=-496.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=5, pseudoWins=481.74000000000007, nSimulations=215, avgReward=-376.18604651162815)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=2, pseudoWins=37.77, nSimulations=10, avgReward=-222.29999999999998)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, pseudoWins=55.56, nSimulations=28, avgReward=-401.57142857142856)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=24.84, nSimulations=16, avgReward=-449.1875)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=9.71, nSimulations=4, avgReward=-357.25)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=60, pseudoWins=1354.7799999999986, nSimulations=509, avgReward=-333.84872298624754)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=22.0, nSimulations=12, avgReward=-416.6666666666667)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=1.61, nSimulations=1, avgReward=-439.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=0.86, nSimulations=1, avgReward=-514.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=13.529999999999998, nSimulations=10, avgReward=-464.69999999999993)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=5.270000000000001, nSimulations=5, avgReward=-494.6)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=18.14, nSimulations=11, avgReward=-435.0909090909091)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, pseudoWins=35.24, nSimulations=11, avgReward=-279.6363636363637)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=7.91, nSimulations=5, avgReward=-441.80000000000007)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=21, pseudoWins=702.7000000000004, nSimulations=241, avgReward=-309.02074688796733)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, pseudoWins=14.84, nSimulations=3, avgReward=-105.33333333333333)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=20.669999999999995, nSimulations=15, avgReward=-462.19999999999993)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=11.99, nSimulations=6, avgReward=-415.0)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=5, pseudoWins=125.3, nSimulations=53, avgReward=-363.5849056603772)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=8.58, nSimulations=5, avgReward=-428.4)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=2, pseudoWins=110.34000000000002, nSimulations=61, avgReward=-419.11475409836055)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=37, pseudoWins=937.8400000000006, nSimulations=201, avgReward=-134.19900497512447)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=21.490000000000002, nSimulations=11, avgReward=-404.6363636363636)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=10.31, nSimulations=7, avgReward=-452.7142857142857)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=12.650000000000002, nSimulations=7, avgReward=-419.28571428571433)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=6.18, nSimulations=4, avgReward=-445.5)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=45.78, nSimulations=26, avgReward=-423.92307692307685)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=9.89, nSimulations=9, avgReward=-490.1111111111111)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=3, pseudoWins=260.3999999999999, nSimulations=134, avgReward=-406.2537313432838)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=95.05000000000003, nSimulations=62, avgReward=-446.69354838709654)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=58.13, nSimulations=41, avgReward=-458.219512195122)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=21, pseudoWins=640.3200000000002, nSimulations=192, avgReward=-267.1302083333334)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=23, pseudoWins=878.9700000000012, nSimulations=279, avgReward=-284.9569892473119)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=78.53000000000002, nSimulations=70, avgReward=-488.1571428571431)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, pseudoWins=1.4100000000000001, nSimulations=2, avgReward=-529.5)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, pseudoWins=63.84, nSimulations=34, avgReward=-412.23529411764713)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=10.530000000000001, nSimulations=8, avgReward=-468.375)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=13.969999999999999, nSimulations=9, avgReward=-444.77777777777777)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=0.72, nSimulations=1, avgReward=-528.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=1.04, nSimulations=1, avgReward=-496.0)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, pseudoWins=22.830000000000002, nSimulations=7, avgReward=-273.85714285714283)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, pseudoWins=51.07999999999999, nSimulations=25, avgReward=-395.68)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=7, pseudoWins=157.0999999999999, nSimulations=59, avgReward=-333.7288135593219)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=2, pseudoWins=528.1200000000001, nSimulations=304, avgReward=-426.32565789473676)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=10.73, nSimulations=7, avgReward=-446.7142857142857)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=1.12, nSimulations=1, avgReward=-488.0)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=18.55, nSimulations=7, avgReward=-335.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=729.3399999999998, nSimulations=471, avgReward=-445.81528662420413)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=2.38, nSimulations=2, avgReward=-481.0)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=2, pseudoWins=33.02, nSimulations=4, avgReward=225.49999999999994)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=4, pseudoWins=542.0099999999998, nSimulations=270, avgReward=-399.86296296296274)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=23, pseudoWins=642.1900000000011, nSimulations=304, avgReward=-388.8453947368425)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=1.61, nSimulations=1, avgReward=-439.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=4.92, nSimulations=2, avgReward=-354.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, pseudoWins=43.41, nSimulations=22, avgReward=-402.6818181818182)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=15.86, nSimulations=8, avgReward=-401.75)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=2.75, nSimulations=2, avgReward=-462.5)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=23.369999999999997, nSimulations=10, avgReward=-366.3)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=8, pseudoWins=441.8099999999999, nSimulations=205, avgReward=-384.541463414634)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=2, pseudoWins=102.77000000000001, nSimulations=61, avgReward=-431.5245901639342)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=8.73, nSimulations=8, avgReward=-490.875)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=25.9, nSimulations=20, avgReward=-470.5)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=3.9, nSimulations=4, avgReward=-502.5)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=2, pseudoWins=81.62000000000002, nSimulations=47, avgReward=-426.34042553191483)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=1.67, nSimulations=1, avgReward=-433.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=2, pseudoWins=105.32999999999998, nSimulations=70, avgReward=-449.5285714285712)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=316.4100000000001, nSimulations=188, avgReward=-433.1914893617021)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=0.93, nSimulations=1, avgReward=-507.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=27, pseudoWins=930.6299999999994, nSimulations=296, avgReward=-285.9391891891894)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=10.379999999999999, nSimulations=7, avgReward=-451.7142857142857)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=2.25, nSimulations=2, avgReward=-487.5)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=87.22999999999999, nSimulations=80, avgReward=-491.31249999999994)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=7.13, nSimulations=6, avgReward=-496.00000000000006)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=51.01999999999999, nSimulations=34, avgReward=-449.9411764705883)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=14.87, nSimulations=6, avgReward=-352.1666666666667)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=6.66, nSimulations=4, avgReward=-433.5)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=0.97, nSimulations=1, avgReward=-503.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=5, pseudoWins=344.65999999999985, nSimulations=196, avgReward=-424.66326530612264)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=24.080000000000002, nSimulations=20, avgReward=-479.6)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=98.30999999999999, nSimulations=73, avgReward=-465.3287671232875)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=3, pseudoWins=324.71999999999997, nSimulations=154, avgReward=-389.72077922077904)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=12.24, nSimulations=6, avgReward=-396.00000000000006)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=1.1, nSimulations=1, avgReward=-490.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=74.53, nSimulations=59, avgReward=-473.6779661016947)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=10.0, nSimulations=8, avgReward=-475.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=86.65000000000002, nSimulations=77, avgReward=-487.4675324675323)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=5.87, nSimulations=3, avgReward=-404.3333333333333)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=11.12, nSimulations=7, avgReward=-441.1428571428571)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, pseudoWins=8.62, nSimulations=8, avgReward=-492.25)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=12.4, nSimulations=2, avgReward=20.0)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=42.89999999999999, nSimulations=23, avgReward=-413.4782608695652)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=1.96, nSimulations=2, avgReward=-502.0)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, pseudoWins=59.669999999999995, nSimulations=34, avgReward=-424.5)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=92.29000000000003, nSimulations=62, avgReward=-452.58064516129025)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=44.96, nSimulations=24, avgReward=-413.62499999999994)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=14.57, nSimulations=9, avgReward=-438.11111111111103)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=85.0, nSimulations=60, avgReward=-458.58333333333326)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=1.87, nSimulations=1, avgReward=-413.0)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=6.630000000000001, nSimulations=3, avgReward=-379.0)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=8.93, nSimulations=7, avgReward=-472.42857142857144)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=15, pseudoWins=442.08999999999986, nSimulations=204, avgReward=-383.2892156862743)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=4.59, nSimulations=3, avgReward=-447.0)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=5, pseudoWins=126.19999999999999, nSimulations=60, avgReward=-389.66666666666634)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, pseudoWins=5.28, nSimulations=3, avgReward=-424.0)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=3, pseudoWins=166.06999999999994, nSimulations=89, avgReward=-414.5056179775282)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=17.65, nSimulations=13, avgReward=-464.23076923076917)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=1.1, nSimulations=1, avgReward=-490.0)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=4, pseudoWins=566.3499999999991, nSimulations=303, avgReward=-413.3201320132014)
({'canMoveWest': True, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=16, pseudoWins=2641.3000000000006, nSimulations=1541, avgReward=-428.8221933809206)
({'canMoveWest': False, 'moveToClosestFood': 'East', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=5, pseudoWins=288.32999999999987, nSimulations=130, avgReward=-378.2076923076924)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, pseudoWins=35.54, nSimulations=24, avgReward=-451.91666666666674)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': None, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': None, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': None, 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=126, pseudoWins=2983.109999999998, nSimulations=1162, avgReward=-343.28399311531825)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=2, pseudoWins=26.04, nSimulations=4, avgReward=51.0)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'West'): ModelEntry(nWins=3, pseudoWins=300.3200000000001, nSimulations=120, avgReward=-350.8250000000002)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=4.54, nSimulations=5, avgReward=-509.20000000000005)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=1.06, nSimulations=1, avgReward=-494.0)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, pseudoWins=1.2, nSimulations=1, avgReward=-480.0)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, pseudoWins=326.58000000000015, nSimulations=179, avgReward=-418.6089385474858)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': True, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'West', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=3.58, nSimulations=3, avgReward=-480.66666666666663)
({'canMoveWest': True, 'moveToClosestFood': 'South', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'North', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, pseudoWins=4.09, nSimulations=4, avgReward=-497.75)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'East', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, pseudoWins=6.3100000000000005, nSimulations=4, avgReward=-442.25)
({'canMoveWest': True, 'moveToClosestFood': 'West', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, pseudoWins=9.26, nSimulations=5, avgReward=-414.80000000000007)
({'canMoveWest': True, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': True, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': False, 'canMoveEast': False}, 'South'): ModelEntry(nWins=1, pseudoWins=28.21, nSimulations=9, avgReward=-286.5555555555556)
({'canMoveWest': False, 'moveToClosestFood': 'North', 'canMoveNorth': True, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': False, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'East', 'canMoveSouth': False, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, pseudoWins=6.709999999999999, nSimulations=5, avgReward=-465.8)
({'canMoveWest': False, 'moveToClosestFood': 'South', 'canMoveNorth': False, 'ghostOnClosestCapsuleDirectionPoint': False, 'ghostWithin1UnitOfClosestCapsuleDirectionPoint': True, 'ghostOnClosestFoodDirectionPoint': False, 'moveToClosestCapsule': 'South', 'canMoveSouth': True, 'ghostWithin1UnitOfClosestFoodDirectionPoint': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=2, pseudoWins=76.71000000000001, nSimulations=33, avgReward=-367.54545454545445)
