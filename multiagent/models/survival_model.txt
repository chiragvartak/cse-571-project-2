Playing on survival
Took 28.8239998817 seconds to train

Real Games info:
('Average Score:', 503.8)
('Scores:       ', '504.0, 504.0, 504.0, 502.0, 504.0, 504.0, 504.0, 504.0, 504.0, 504.0')
Win Rate:      10/10 (1.00)
('Record:       ', 'Win, Win, Win, Win, Win, Win, Win, Win, Win, Win')

Training info:
Total number of simulations run: 1000
Total number of literal wins: 230
Use win threshold: False
Total number of effective wins: 0
Final win threshold: -9999999
Average score: -278.526
Total number of nodes: 867

Number of states you saw in real games which you had not seen in training: 0
States you saw in real games which you had not seen in training:


Data:

({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-515.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-542.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=12, nSimulations=16, listOfWinTuples=[WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=True, score=474.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=491.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=493.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=10, nSimulations=17, listOfWinTuples=[WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-518.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=2, nSimulations=5, listOfWinTuples=[WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-508.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-517.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, nSimulations=10, listOfWinTuples=[WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-504.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=479.0), WinTuple(didWin=False, score=-532.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-519.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=7, nSimulations=14, listOfWinTuples=[WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=478.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-508.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-542.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-507.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=15, nSimulations=15, listOfWinTuples=[WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=502.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=6, nSimulations=8, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=474.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-532.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=1, nSimulations=6, listOfWinTuples=[WinTuple(didWin=False, score=-517.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=True, score=479.0), WinTuple(didWin=False, score=-542.0), WinTuple(didWin=False, score=-537.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-515.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-518.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=19, nSimulations=33, listOfWinTuples=[WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=485.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-525.0), WinTuple(didWin=False, score=-543.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-511.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-512.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-527.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=8, nSimulations=11, listOfWinTuples=[WinTuple(didWin=False, score=-515.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-514.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=499.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=5, nSimulations=13, listOfWinTuples=[WinTuple(didWin=False, score=-519.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=478.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-505.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=3, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=494.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-513.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-527.0), WinTuple(didWin=False, score=-532.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=7, nSimulations=13, listOfWinTuples=[WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-526.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=483.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-537.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-531.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-513.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=8, nSimulations=10, listOfWinTuples=[WinTuple(didWin=False, score=-514.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=496.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=485.0), WinTuple(didWin=False, score=-515.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-543.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=5, listOfWinTuples=[WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-529.0), WinTuple(didWin=False, score=-509.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, nSimulations=5, listOfWinTuples=[WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-1007.0), WinTuple(didWin=False, score=-528.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-516.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=4, nSimulations=10, listOfWinTuples=[WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-505.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, nSimulations=6, listOfWinTuples=[WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=True, score=478.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-511.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, nSimulations=6, listOfWinTuples=[WinTuple(didWin=False, score=-545.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-529.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=False, score=-532.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=4, nSimulations=4, listOfWinTuples=[WinTuple(didWin=True, score=477.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=485.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=465.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=4, nSimulations=11, listOfWinTuples=[WinTuple(didWin=True, score=485.0), WinTuple(didWin=False, score=-527.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=478.0), WinTuple(didWin=False, score=-524.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-509.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-516.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-545.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-520.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=15, nSimulations=47, listOfWinTuples=[WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-534.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-517.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=True, score=484.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-1009.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-528.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-537.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-521.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=3, nSimulations=4, listOfWinTuples=[WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-518.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=3, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=493.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=2, nSimulations=9, listOfWinTuples=[WinTuple(didWin=True, score=485.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-528.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-505.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, nSimulations=4, listOfWinTuples=[WinTuple(didWin=False, score=-524.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-537.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, nSimulations=6, listOfWinTuples=[WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-527.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-523.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-514.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, nSimulations=4, listOfWinTuples=[WinTuple(didWin=False, score=-545.0), WinTuple(didWin=False, score=-531.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-516.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=14, nSimulations=14, listOfWinTuples=[WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=504.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=497.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-521.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=2, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=504.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=4, nSimulations=12, listOfWinTuples=[WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-527.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-523.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-542.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-520.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=495.0), WinTuple(didWin=False, score=-520.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-513.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=3, nSimulations=8, listOfWinTuples=[WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=483.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=False, score=-532.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=9, nSimulations=9, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=484.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=True, score=502.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, nSimulations=9, listOfWinTuples=[WinTuple(didWin=False, score=-515.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-526.0), WinTuple(didWin=True, score=471.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-506.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=4, nSimulations=10, listOfWinTuples=[WinTuple(didWin=True, score=493.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=468.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-515.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=4, nSimulations=7, listOfWinTuples=[WinTuple(didWin=False, score=-527.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-512.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=6, listOfWinTuples=[WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-505.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=5, nSimulations=5, listOfWinTuples=[WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=497.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=34, nSimulations=84, listOfWinTuples=[WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=505.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-534.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=505.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=471.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-524.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=484.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-543.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=505.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-535.0), WinTuple(didWin=False, score=-502.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-517.0), WinTuple(didWin=False, score=-523.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -45, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=2, nSimulations=14, listOfWinTuples=[WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-534.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-524.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-518.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-511.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=3, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=465.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=485.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=487.0), WinTuple(didWin=False, score=-511.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-532.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=2, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=465.0), WinTuple(didWin=True, score=485.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-526.0), WinTuple(didWin=False, score=-506.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=7, listOfWinTuples=[WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-510.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=3, nSimulations=4, listOfWinTuples=[WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=501.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=4, listOfWinTuples=[WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-516.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-518.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=27, nSimulations=43, listOfWinTuples=[WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-529.0), WinTuple(didWin=True, score=471.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-524.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=474.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-505.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=3, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=465.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=484.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=485.0), WinTuple(didWin=False, score=-543.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': -135, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-515.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-506.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, nSimulations=7, listOfWinTuples=[WinTuple(didWin=False, score=-534.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-503.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=4, nSimulations=6, listOfWinTuples=[WinTuple(didWin=False, score=-516.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=485.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=479.0), WinTuple(didWin=False, score=-542.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=471.0), WinTuple(didWin=False, score=-514.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=False, score=-532.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-513.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-533.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=3, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=493.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=2, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=487.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-533.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=1, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-517.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-516.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-543.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-509.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=4, nSimulations=6, listOfWinTuples=[WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-525.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-535.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-511.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=1, nSimulations=5, listOfWinTuples=[WinTuple(didWin=False, score=-524.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=True, score=479.0), WinTuple(didWin=False, score=-517.0), WinTuple(didWin=False, score=-516.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-534.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=False, score=-525.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=2, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=465.0), WinTuple(didWin=True, score=485.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=2, nSimulations=5, listOfWinTuples=[WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-515.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-518.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-513.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=6, listOfWinTuples=[WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-526.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-537.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-517.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-515.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=3, nSimulations=5, listOfWinTuples=[WinTuple(didWin=True, score=471.0), WinTuple(didWin=True, score=468.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-522.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-532.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=465.0), WinTuple(didWin=False, score=-545.0), WinTuple(didWin=False, score=-518.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-514.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=9, nSimulations=9, listOfWinTuples=[WinTuple(didWin=True, score=505.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=471.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=True, score=505.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=497.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=2, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=465.0), WinTuple(didWin=True, score=485.0), WinTuple(didWin=False, score=-515.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=4, nSimulations=4, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=465.0), WinTuple(didWin=True, score=485.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=6, nSimulations=11, listOfWinTuples=[WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-524.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=474.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-525.0), WinTuple(didWin=False, score=-513.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=24, nSimulations=34, listOfWinTuples=[WinTuple(didWin=False, score=-519.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=471.0), WinTuple(didWin=True, score=468.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=474.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-525.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=False, score=-518.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=1, nSimulations=5, listOfWinTuples=[WinTuple(didWin=True, score=465.0), WinTuple(didWin=False, score=-545.0), WinTuple(didWin=False, score=-517.0), WinTuple(didWin=False, score=-529.0), WinTuple(didWin=False, score=-533.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -45, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=8, nSimulations=31, listOfWinTuples=[WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-527.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-543.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-509.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=2, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-532.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, nSimulations=7, listOfWinTuples=[WinTuple(didWin=False, score=-527.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=True, score=478.0), WinTuple(didWin=False, score=-547.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=True, score=497.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-514.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=6, listOfWinTuples=[WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-518.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=5, nSimulations=6, listOfWinTuples=[WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-542.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=True, score=492.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-504.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=4, nSimulations=8, listOfWinTuples=[WinTuple(didWin=False, score=-531.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-533.0), WinTuple(didWin=False, score=-513.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=1, nSimulations=5, listOfWinTuples=[WinTuple(didWin=True, score=465.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-521.0), WinTuple(didWin=False, score=-529.0), WinTuple(didWin=False, score=-533.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -135, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=3, nSimulations=8, listOfWinTuples=[WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-528.0), WinTuple(didWin=True, score=483.0), WinTuple(didWin=False, score=-511.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=3, nSimulations=7, listOfWinTuples=[WinTuple(didWin=True, score=485.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=False, score=-515.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-511.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=7, nSimulations=15, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=465.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-507.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=13, nSimulations=42, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=True, score=484.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-528.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-522.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-525.0), WinTuple(didWin=False, score=-522.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=3, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=465.0), WinTuple(didWin=True, score=477.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=465.0), WinTuple(didWin=False, score=-535.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-525.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=3, nSimulations=5, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-537.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-504.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, nSimulations=6, listOfWinTuples=[WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=497.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-517.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=6, nSimulations=9, listOfWinTuples=[WinTuple(didWin=True, score=493.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=495.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=3, nSimulations=4, listOfWinTuples=[WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=False, score=-514.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -45, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=8, nSimulations=21, listOfWinTuples=[WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-527.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=484.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=True, score=483.0), WinTuple(didWin=False, score=-522.0), WinTuple(didWin=False, score=-543.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=3, nSimulations=9, listOfWinTuples=[WinTuple(didWin=False, score=-519.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-528.0), WinTuple(didWin=False, score=-506.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=5, nSimulations=19, listOfWinTuples=[WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-508.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=3, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=465.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=497.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=6, nSimulations=18, listOfWinTuples=[WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=471.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=479.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-528.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-519.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=9, nSimulations=11, listOfWinTuples=[WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=484.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=501.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=5, nSimulations=22, listOfWinTuples=[WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-534.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-523.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-527.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=10, nSimulations=12, listOfWinTuples=[WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=500.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=485.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-518.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-525.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-506.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-535.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, nSimulations=7, listOfWinTuples=[WinTuple(didWin=False, score=-534.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-523.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-519.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=484.0), WinTuple(didWin=False, score=-519.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=2, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=497.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=7, listOfWinTuples=[WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-547.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-543.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=2, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=484.0), WinTuple(didWin=True, score=479.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-523.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=2, nSimulations=4, listOfWinTuples=[WinTuple(didWin=False, score=-514.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-515.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-545.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=2, nSimulations=4, listOfWinTuples=[WinTuple(didWin=False, score=-545.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-519.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-517.0), WinTuple(didWin=False, score=-535.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=491.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-527.0), WinTuple(didWin=False, score=-516.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-507.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=23, nSimulations=32, listOfWinTuples=[WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-547.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=504.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=12, nSimulations=61, listOfWinTuples=[WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-524.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=486.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-505.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=4, listOfWinTuples=[WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-519.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-515.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=4, nSimulations=17, listOfWinTuples=[WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=477.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-529.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-528.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-505.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-524.0), WinTuple(didWin=False, score=-533.0), WinTuple(didWin=False, score=-542.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=6, nSimulations=32, listOfWinTuples=[WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=False, score=-505.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-518.0), WinTuple(didWin=False, score=-513.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=3, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=True, score=493.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-531.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=4, nSimulations=10, listOfWinTuples=[WinTuple(didWin=True, score=496.0), WinTuple(didWin=False, score=-526.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=False, score=-509.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=3, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=465.0), WinTuple(didWin=True, score=468.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=498.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-507.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-527.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -135, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=15, nSimulations=48, listOfWinTuples=[WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=465.0), WinTuple(didWin=True, score=477.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-531.0), WinTuple(didWin=False, score=-533.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-530.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-517.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=465.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-529.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-533.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-537.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=4, listOfWinTuples=[WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-506.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -135, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-529.0), WinTuple(didWin=False, score=-542.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-511.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=488.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, nSimulations=18, listOfWinTuples=[WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-527.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-530.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-505.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=10, nSimulations=20, listOfWinTuples=[WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=True, score=484.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-509.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=44, nSimulations=234, listOfWinTuples=[WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=485.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-517.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=465.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=477.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-531.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-533.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=505.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=505.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-517.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-526.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=465.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-529.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=484.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=505.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=468.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-547.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-517.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-533.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=483.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-502.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-525.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-511.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-507.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=6, nSimulations=9, listOfWinTuples=[WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-535.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-512.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=3, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=465.0), WinTuple(didWin=True, score=465.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-520.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-508.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=5, nSimulations=11, listOfWinTuples=[WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-543.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-510.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-519.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-535.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=39, nSimulations=77, listOfWinTuples=[WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=False, score=-1004.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=485.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=471.0), WinTuple(didWin=True, score=478.0), WinTuple(didWin=False, score=-524.0), WinTuple(didWin=True, score=479.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-1007.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=474.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-522.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-505.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=2, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=477.0), WinTuple(didWin=False, score=-545.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-525.0), WinTuple(didWin=True, score=497.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -135, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=3, nSimulations=8, listOfWinTuples=[WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=484.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-533.0), WinTuple(didWin=True, score=483.0), WinTuple(didWin=False, score=-543.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=3, nSimulations=5, listOfWinTuples=[WinTuple(didWin=True, score=495.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-510.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=6, nSimulations=16, listOfWinTuples=[WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=465.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=True, score=478.0), WinTuple(didWin=False, score=-525.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-519.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-513.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -135, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=4, nSimulations=9, listOfWinTuples=[WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-514.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=7, nSimulations=14, listOfWinTuples=[WinTuple(didWin=True, score=505.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-527.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-535.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=2, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-510.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-515.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=4, nSimulations=8, listOfWinTuples=[WinTuple(didWin=True, score=496.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-532.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=7, nSimulations=10, listOfWinTuples=[WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=True, score=468.0), WinTuple(didWin=True, score=478.0), WinTuple(didWin=False, score=-547.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-525.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-518.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=465.0), WinTuple(didWin=False, score=-535.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=8, nSimulations=19, listOfWinTuples=[WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-526.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=True, score=484.0), WinTuple(didWin=True, score=486.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-522.0), WinTuple(didWin=False, score=-543.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=2, nSimulations=7, listOfWinTuples=[WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-508.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=487.0), WinTuple(didWin=False, score=-519.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -45, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=4, nSimulations=17, listOfWinTuples=[WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=468.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-542.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-512.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-506.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=22, nSimulations=63, listOfWinTuples=[WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-531.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-1004.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-525.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-525.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-522.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-504.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -45, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=4, nSimulations=24, listOfWinTuples=[WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-522.0), WinTuple(didWin=False, score=-502.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=12, nSimulations=15, listOfWinTuples=[WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=True, score=497.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=1, nSimulations=4, listOfWinTuples=[WinTuple(didWin=False, score=-545.0), WinTuple(didWin=True, score=484.0), WinTuple(didWin=False, score=-517.0), WinTuple(didWin=False, score=-509.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=8, nSimulations=8, listOfWinTuples=[WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=452.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=3, nSimulations=15, listOfWinTuples=[WinTuple(didWin=False, score=-527.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-509.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=465.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -45, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, nSimulations=10, listOfWinTuples=[WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-523.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-509.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=482.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-506.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=3, nSimulations=4, listOfWinTuples=[WinTuple(didWin=True, score=471.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=503.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=8, listOfWinTuples=[WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-508.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=3, nSimulations=6, listOfWinTuples=[WinTuple(didWin=False, score=-519.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=501.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-509.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=13, nSimulations=38, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-542.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-522.0), WinTuple(didWin=False, score=-543.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-537.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=465.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=2, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=452.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-523.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=7, nSimulations=7, listOfWinTuples=[WinTuple(didWin=True, score=505.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=499.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=2, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-523.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=3, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=468.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=497.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-512.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=3, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=494.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=496.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-547.0), WinTuple(didWin=False, score=-505.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=8, nSimulations=35, listOfWinTuples=[WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-527.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-534.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-545.0), WinTuple(didWin=False, score=-533.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-530.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-526.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=True, score=468.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-533.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-543.0), WinTuple(didWin=False, score=-509.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-515.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-545.0), WinTuple(didWin=True, score=484.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=5, nSimulations=6, listOfWinTuples=[WinTuple(didWin=True, score=465.0), WinTuple(didWin=True, score=477.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=479.0), WinTuple(didWin=False, score=-518.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, nSimulations=5, listOfWinTuples=[WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-542.0), WinTuple(didWin=False, score=-516.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=6, nSimulations=6, listOfWinTuples=[WinTuple(didWin=True, score=471.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=499.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=3, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=492.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=1, nSimulations=4, listOfWinTuples=[WinTuple(didWin=False, score=-533.0), WinTuple(didWin=True, score=479.0), WinTuple(didWin=False, score=-533.0), WinTuple(didWin=False, score=-537.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-505.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=6, listOfWinTuples=[WinTuple(didWin=True, score=495.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-512.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-542.0), WinTuple(didWin=False, score=-537.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-516.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-514.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-515.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-517.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=8, nSimulations=27, listOfWinTuples=[WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-542.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-1009.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-528.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-522.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=5, nSimulations=14, listOfWinTuples=[WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=471.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-533.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=483.0), WinTuple(didWin=False, score=-515.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=3, nSimulations=6, listOfWinTuples=[WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-508.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-514.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-518.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=4, nSimulations=7, listOfWinTuples=[WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=474.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-532.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=94, nSimulations=388, listOfWinTuples=[WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-527.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-524.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-545.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-527.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-521.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-1004.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-517.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=485.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-1007.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-525.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-542.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-1007.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-528.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=484.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=True, score=486.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=474.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-1009.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-528.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-1003.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-522.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-537.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-502.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=4, nSimulations=6, listOfWinTuples=[WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=False, score=-532.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-506.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-516.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=15, nSimulations=43, listOfWinTuples=[WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=465.0), WinTuple(didWin=True, score=477.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=505.0), WinTuple(didWin=True, score=505.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-517.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=465.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-529.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=505.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=468.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-533.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-543.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=9, nSimulations=9, listOfWinTuples=[WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=498.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=18, nSimulations=18, listOfWinTuples=[WinTuple(didWin=True, score=494.0), WinTuple(didWin=True, score=468.0), WinTuple(didWin=True, score=478.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=502.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=4, nSimulations=5, listOfWinTuples=[WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=483.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=False, score=-511.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-521.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=4, nSimulations=6, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-511.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=465.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-508.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-545.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-537.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=6, listOfWinTuples=[WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-506.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-518.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=5, nSimulations=5, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=491.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-509.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=18, nSimulations=32, listOfWinTuples=[WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=468.0), WinTuple(didWin=False, score=-1007.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=False, score=-533.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-507.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, nSimulations=5, listOfWinTuples=[WinTuple(didWin=False, score=-527.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-509.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-532.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, nSimulations=35, listOfWinTuples=[WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=3, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=498.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-519.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=18, nSimulations=21, listOfWinTuples=[WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=True, score=505.0), WinTuple(didWin=True, score=505.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=505.0), WinTuple(didWin=True, score=471.0), WinTuple(didWin=True, score=468.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=False, score=-505.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-535.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -135, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, nSimulations=5, listOfWinTuples=[WinTuple(didWin=False, score=-533.0), WinTuple(didWin=False, score=-517.0), WinTuple(didWin=True, score=484.0), WinTuple(didWin=False, score=-517.0), WinTuple(didWin=False, score=-514.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=5, nSimulations=18, listOfWinTuples=[WinTuple(didWin=False, score=-527.0), WinTuple(didWin=False, score=-534.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-530.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=484.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-533.0), WinTuple(didWin=True, score=483.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-522.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=4, listOfWinTuples=[WinTuple(didWin=False, score=-527.0), WinTuple(didWin=False, score=-547.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-518.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=4, nSimulations=7, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-547.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-522.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-542.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=2, nSimulations=9, listOfWinTuples=[WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-530.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-522.0), WinTuple(didWin=False, score=-505.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=4, nSimulations=13, listOfWinTuples=[WinTuple(didWin=True, score=485.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=479.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-511.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=5, nSimulations=5, listOfWinTuples=[WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=True, score=497.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=4, listOfWinTuples=[WinTuple(didWin=False, score=-517.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-505.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=4, nSimulations=11, listOfWinTuples=[WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=True, score=465.0), WinTuple(didWin=False, score=-529.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=False, score=-522.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=477.0), WinTuple(didWin=False, score=-530.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=4, listOfWinTuples=[WinTuple(didWin=False, score=-527.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-528.0), WinTuple(didWin=False, score=-514.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-527.0), WinTuple(didWin=True, score=490.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=465.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=3, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=452.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=501.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -45, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=3, nSimulations=24, listOfWinTuples=[WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-503.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-524.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -135, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=8, nSimulations=35, listOfWinTuples=[WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=485.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-531.0), WinTuple(didWin=False, score=-533.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=486.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-509.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-517.0), WinTuple(didWin=False, score=-542.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=2, nSimulations=7, listOfWinTuples=[WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-528.0), WinTuple(didWin=False, score=-505.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=5, nSimulations=7, listOfWinTuples=[WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=False, score=-543.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=2, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=488.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-543.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=10, nSimulations=10, listOfWinTuples=[WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=487.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-516.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-520.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-530.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-514.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-512.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=471.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-518.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=11, nSimulations=14, listOfWinTuples=[WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=496.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=465.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-542.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=9, nSimulations=11, listOfWinTuples=[WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-535.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-514.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=2, nSimulations=8, listOfWinTuples=[WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=True, score=484.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-507.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, nSimulations=4, listOfWinTuples=[WinTuple(didWin=False, score=-527.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=483.0), WinTuple(didWin=False, score=-519.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-513.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-520.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-523.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=3, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=477.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=491.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-537.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=503.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=6, nSimulations=9, listOfWinTuples=[WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=471.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-525.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=2, nSimulations=6, listOfWinTuples=[WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-505.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=3, nSimulations=8, listOfWinTuples=[WinTuple(didWin=True, score=485.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-504.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=491.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-518.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=471.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-514.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-527.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-520.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-518.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=1, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-531.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-521.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-535.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-545.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=4, nSimulations=12, listOfWinTuples=[WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=479.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-522.0), WinTuple(didWin=False, score=-507.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-542.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=2, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=484.0), WinTuple(didWin=True, score=497.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=4, nSimulations=5, listOfWinTuples=[WinTuple(didWin=True, score=485.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=False, score=-518.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=7, nSimulations=16, listOfWinTuples=[WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=True, score=483.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-537.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-518.0), WinTuple(didWin=True, score=494.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-521.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-545.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=3, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=503.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-545.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=500.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-523.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=2, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=496.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-526.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=5, listOfWinTuples=[WinTuple(didWin=False, score=-531.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-508.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=5, listOfWinTuples=[WinTuple(didWin=False, score=-534.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-512.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -45, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=13, nSimulations=45, listOfWinTuples=[WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-543.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-505.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-532.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-515.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-515.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=2, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=465.0), WinTuple(didWin=True, score=477.0), WinTuple(didWin=False, score=-531.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-516.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=4, listOfWinTuples=[WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-507.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-514.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=False, score=-528.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-518.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-516.0), WinTuple(didWin=True, score=484.0), WinTuple(didWin=False, score=-520.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=6, nSimulations=23, listOfWinTuples=[WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-547.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-507.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, nSimulations=6, listOfWinTuples=[WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-547.0), WinTuple(didWin=False, score=-518.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=2, nSimulations=4, listOfWinTuples=[WinTuple(didWin=True, score=486.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-532.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-543.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=3, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=498.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=16, nSimulations=20, listOfWinTuples=[WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=True, score=504.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-545.0), WinTuple(didWin=False, score=-517.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=5, nSimulations=13, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=502.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=4, listOfWinTuples=[WinTuple(didWin=False, score=-527.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-504.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=7, nSimulations=8, listOfWinTuples=[WinTuple(didWin=True, score=493.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-516.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-526.0), WinTuple(didWin=False, score=-507.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=497.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=3, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=499.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-512.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=493.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=13, nSimulations=39, listOfWinTuples=[WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-545.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=486.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=483.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-522.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=3, nSimulations=4, listOfWinTuples=[WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=465.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=True, score=503.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=465.0), WinTuple(didWin=True, score=477.0), WinTuple(didWin=False, score=-530.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=1, nSimulations=4, listOfWinTuples=[WinTuple(didWin=False, score=-545.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=True, score=479.0), WinTuple(didWin=False, score=-542.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=2, nSimulations=10, listOfWinTuples=[WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-521.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-529.0), WinTuple(didWin=True, score=479.0), WinTuple(didWin=False, score=-517.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=483.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-537.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-533.0), WinTuple(didWin=False, score=-529.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=5, nSimulations=6, listOfWinTuples=[WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=495.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-514.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, nSimulations=4, listOfWinTuples=[WinTuple(didWin=False, score=-533.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-518.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': -45, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=2, nSimulations=5, listOfWinTuples=[WinTuple(didWin=False, score=-520.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=True, score=468.0), WinTuple(didWin=False, score=-542.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=2, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=465.0), WinTuple(didWin=True, score=477.0), WinTuple(didWin=False, score=-545.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=6, nSimulations=7, listOfWinTuples=[WinTuple(didWin=True, score=471.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-535.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=2, nSimulations=4, listOfWinTuples=[WinTuple(didWin=True, score=465.0), WinTuple(didWin=True, score=485.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-518.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=5, nSimulations=13, listOfWinTuples=[WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-533.0), WinTuple(didWin=True, score=484.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-522.0), WinTuple(didWin=False, score=-507.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=465.0), WinTuple(didWin=False, score=-535.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=488.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=7, listOfWinTuples=[WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-533.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-507.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': -135, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-517.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=9, nSimulations=12, listOfWinTuples=[WinTuple(didWin=True, score=505.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-525.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=True, score=502.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-535.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=4, nSimulations=5, listOfWinTuples=[WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=483.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=True, score=494.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-533.0), WinTuple(didWin=False, score=-520.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=3, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=True, score=501.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=12, nSimulations=15, listOfWinTuples=[WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=True, score=478.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-522.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=493.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=4, listOfWinTuples=[WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=False, score=-507.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=482.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=468.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=497.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-533.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=8, nSimulations=15, listOfWinTuples=[WinTuple(didWin=True, score=495.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=485.0), WinTuple(didWin=True, score=478.0), WinTuple(didWin=False, score=-524.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-1007.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-506.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=4, nSimulations=4, listOfWinTuples=[WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=479.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=497.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=493.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-510.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=4, nSimulations=10, listOfWinTuples=[WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-526.0), WinTuple(didWin=True, score=465.0), WinTuple(didWin=False, score=-529.0), WinTuple(didWin=True, score=478.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-504.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=8, nSimulations=8, listOfWinTuples=[WinTuple(didWin=True, score=465.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=487.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-528.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-531.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-543.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=498.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=8, nSimulations=18, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-1007.0), WinTuple(didWin=False, score=-542.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-535.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=3, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=True, score=491.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=493.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=3, nSimulations=7, listOfWinTuples=[WinTuple(didWin=False, score=-545.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-521.0), WinTuple(didWin=True, score=465.0), WinTuple(didWin=True, score=485.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=False, score=-535.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-516.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=10, nSimulations=10, listOfWinTuples=[WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=True, score=474.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=488.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-1007.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=3, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=465.0), WinTuple(didWin=True, score=477.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-521.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=4, nSimulations=11, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-510.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-516.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=8, nSimulations=8, listOfWinTuples=[WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=497.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=499.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=4, nSimulations=7, listOfWinTuples=[WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-525.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=3, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=498.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=4, nSimulations=5, listOfWinTuples=[WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-525.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=True, score=501.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=2, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=465.0), WinTuple(didWin=True, score=485.0), WinTuple(didWin=False, score=-515.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=3, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=505.0), WinTuple(didWin=True, score=505.0), WinTuple(didWin=True, score=499.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=10, nSimulations=19, listOfWinTuples=[WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-529.0), WinTuple(didWin=True, score=471.0), WinTuple(didWin=True, score=478.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-524.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=False, score=-507.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=4, nSimulations=25, listOfWinTuples=[WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-527.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-531.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-527.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-526.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-525.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=483.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-543.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=4, nSimulations=6, listOfWinTuples=[WinTuple(didWin=True, score=468.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=True, score=487.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-519.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -45, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, nSimulations=11, listOfWinTuples=[WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-534.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-517.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-545.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-528.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=18, nSimulations=38, listOfWinTuples=[WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=479.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-505.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-543.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=3, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=465.0), WinTuple(didWin=True, score=477.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=2, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=486.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=2, nSimulations=5, listOfWinTuples=[WinTuple(didWin=False, score=-527.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=True, score=483.0), WinTuple(didWin=False, score=-519.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-528.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-517.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=479.0), WinTuple(didWin=False, score=-535.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=4, nSimulations=11, listOfWinTuples=[WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=486.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-506.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-518.0), WinTuple(didWin=False, score=-522.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=18, nSimulations=37, listOfWinTuples=[WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=True, score=478.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-524.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=True, score=505.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=505.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=505.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=497.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=19, nSimulations=47, listOfWinTuples=[WinTuple(didWin=True, score=485.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-527.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-525.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-505.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=6, listOfWinTuples=[WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-524.0), WinTuple(didWin=False, score=-504.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=501.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, nSimulations=6, listOfWinTuples=[WinTuple(didWin=False, score=-518.0), WinTuple(didWin=False, score=-526.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-532.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-532.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=1, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-529.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=465.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, nSimulations=4, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-532.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=3, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=496.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=3, nSimulations=6, listOfWinTuples=[WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-526.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=False, score=-506.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-515.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=4, nSimulations=11, listOfWinTuples=[WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-526.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-1007.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-532.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, nSimulations=16, listOfWinTuples=[WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-507.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=7, nSimulations=8, listOfWinTuples=[WinTuple(didWin=True, score=485.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=487.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-508.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=15, nSimulations=39, listOfWinTuples=[WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-524.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-526.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=True, score=468.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-524.0), WinTuple(didWin=False, score=-517.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-522.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-537.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=4, nSimulations=6, listOfWinTuples=[WinTuple(didWin=True, score=485.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=False, score=-511.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-530.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': -45, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=484.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-521.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=5, nSimulations=8, listOfWinTuples=[WinTuple(didWin=True, score=505.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=505.0), WinTuple(didWin=True, score=505.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-505.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-505.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=13, listOfWinTuples=[WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-528.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-505.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -135, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=6, nSimulations=30, listOfWinTuples=[WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-517.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-526.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-525.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=483.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-510.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-533.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=5, nSimulations=23, listOfWinTuples=[WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-523.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=5, listOfWinTuples=[WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-507.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=483.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-518.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=18, nSimulations=18, listOfWinTuples=[WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=503.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=484.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-514.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-528.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-530.0), WinTuple(didWin=False, score=-511.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=3, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=484.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=491.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-535.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=3, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=483.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=2, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=493.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, nSimulations=17, listOfWinTuples=[WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-545.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-529.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-528.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-516.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-535.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': -135, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=484.0), WinTuple(didWin=False, score=-517.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -45, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=7, nSimulations=23, listOfWinTuples=[WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=483.0), WinTuple(didWin=False, score=-522.0), WinTuple(didWin=False, score=-523.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=2, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=468.0), WinTuple(didWin=True, score=491.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=9, nSimulations=27, listOfWinTuples=[WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=True, score=495.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-1007.0), WinTuple(didWin=False, score=-505.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=4, nSimulations=7, listOfWinTuples=[WinTuple(didWin=True, score=485.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-543.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=2, nSimulations=6, listOfWinTuples=[WinTuple(didWin=False, score=-534.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=468.0), WinTuple(didWin=False, score=-547.0), WinTuple(didWin=False, score=-532.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=3, nSimulations=7, listOfWinTuples=[WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=True, score=478.0), WinTuple(didWin=False, score=-525.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-542.0), WinTuple(didWin=False, score=-506.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-511.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=465.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': -45, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=4, listOfWinTuples=[WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-523.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=8, nSimulations=9, listOfWinTuples=[WinTuple(didWin=True, score=471.0), WinTuple(didWin=True, score=468.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=True, score=497.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-517.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=14, nSimulations=18, listOfWinTuples=[WinTuple(didWin=True, score=496.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=471.0), WinTuple(didWin=True, score=468.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=499.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, nSimulations=7, listOfWinTuples=[WinTuple(didWin=False, score=-517.0), WinTuple(didWin=False, score=-545.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-504.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=1, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=465.0), WinTuple(didWin=False, score=-531.0), WinTuple(didWin=False, score=-535.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=2, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=465.0), WinTuple(didWin=True, score=488.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-545.0), WinTuple(didWin=False, score=-517.0), WinTuple(didWin=False, score=-509.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-519.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=2, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=501.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=3, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=465.0), WinTuple(didWin=True, score=485.0), WinTuple(didWin=True, score=493.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=4, nSimulations=11, listOfWinTuples=[WinTuple(didWin=False, score=-511.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=False, score=-523.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=3, nSimulations=19, listOfWinTuples=[WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=484.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-503.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -135, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-514.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=6, listOfWinTuples=[WinTuple(didWin=True, score=485.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-547.0), WinTuple(didWin=False, score=-515.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, nSimulations=4, listOfWinTuples=[WinTuple(didWin=False, score=-521.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-543.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-507.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=23, nSimulations=27, listOfWinTuples=[WinTuple(didWin=False, score=-527.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=True, score=484.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=486.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=True, score=497.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=21, nSimulations=22, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=471.0), WinTuple(didWin=True, score=468.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=True, score=484.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=504.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-533.0), WinTuple(didWin=False, score=-542.0), WinTuple(didWin=False, score=-528.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=498.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=491.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=2, nSimulations=8, listOfWinTuples=[WinTuple(didWin=False, score=-534.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=True, score=468.0), WinTuple(didWin=True, score=478.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-519.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=17, nSimulations=22, listOfWinTuples=[WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=True, score=474.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=False, score=-528.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=False, score=-506.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-518.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-516.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=3, nSimulations=7, listOfWinTuples=[WinTuple(didWin=False, score=-521.0), WinTuple(didWin=True, score=465.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=484.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-535.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-537.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-518.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=6, listOfWinTuples=[WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-522.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-545.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-520.0), WinTuple(didWin=True, score=484.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-532.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-516.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-528.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, nSimulations=6, listOfWinTuples=[WinTuple(didWin=False, score=-527.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-542.0), WinTuple(didWin=False, score=-515.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=3, nSimulations=6, listOfWinTuples=[WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-508.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-507.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=2, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-515.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=True, score=487.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, nSimulations=8, listOfWinTuples=[WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-503.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, nSimulations=4, listOfWinTuples=[WinTuple(didWin=False, score=-519.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=487.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': -135, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-545.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, nSimulations=5, listOfWinTuples=[WinTuple(didWin=False, score=-1004.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-504.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=6, nSimulations=10, listOfWinTuples=[WinTuple(didWin=True, score=495.0), WinTuple(didWin=True, score=471.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=478.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=False, score=-507.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -135, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=1, nSimulations=5, listOfWinTuples=[WinTuple(didWin=True, score=487.0), WinTuple(didWin=False, score=-517.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-523.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=493.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=7, nSimulations=9, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=True, score=468.0), WinTuple(didWin=True, score=478.0), WinTuple(didWin=False, score=-547.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-525.0), WinTuple(didWin=True, score=497.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=2, nSimulations=5, listOfWinTuples=[WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-532.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=2, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=498.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=2, nSimulations=5, listOfWinTuples=[WinTuple(didWin=False, score=-531.0), WinTuple(didWin=True, score=465.0), WinTuple(didWin=True, score=484.0), WinTuple(didWin=False, score=-517.0), WinTuple(didWin=False, score=-533.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=492.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-511.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-523.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=4, nSimulations=8, listOfWinTuples=[WinTuple(didWin=False, score=-519.0), WinTuple(didWin=False, score=-525.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-506.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=465.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=3, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=492.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=498.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=3, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=465.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=479.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, nSimulations=5, listOfWinTuples=[WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=474.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-520.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=4, nSimulations=7, listOfWinTuples=[WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=False, score=-518.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=6, nSimulations=13, listOfWinTuples=[WinTuple(didWin=False, score=-527.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=True, score=468.0), WinTuple(didWin=False, score=-524.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-523.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=11, listOfWinTuples=[WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-508.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-508.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-508.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-514.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-543.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-517.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=4, nSimulations=4, listOfWinTuples=[WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=True, score=497.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=8, nSimulations=13, listOfWinTuples=[WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=484.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-522.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=3, nSimulations=4, listOfWinTuples=[WinTuple(didWin=True, score=471.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=True, score=487.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-514.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=495.0), WinTuple(didWin=False, score=-518.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-511.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-535.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=4, listOfWinTuples=[WinTuple(didWin=False, score=-529.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-505.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-535.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=2, nSimulations=5, listOfWinTuples=[WinTuple(didWin=True, score=465.0), WinTuple(didWin=True, score=477.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-542.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=56, nSimulations=158, listOfWinTuples=[WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-527.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-527.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=485.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-1007.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-542.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-1007.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-528.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=474.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-1003.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-522.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-537.0), WinTuple(didWin=False, score=-505.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-520.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=False, score=-512.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=4, nSimulations=5, listOfWinTuples=[WinTuple(didWin=False, score=-514.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=484.0), WinTuple(didWin=True, score=452.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=12, nSimulations=18, listOfWinTuples=[WinTuple(didWin=False, score=-531.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=479.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=False, score=-506.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=3, nSimulations=9, listOfWinTuples=[WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-504.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-517.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=5, listOfWinTuples=[WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-527.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-1009.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-507.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-523.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=3, nSimulations=9, listOfWinTuples=[WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-527.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-513.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=2, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-514.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=497.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=2, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=494.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-507.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=465.0), WinTuple(didWin=False, score=-535.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -45, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=4, nSimulations=27, listOfWinTuples=[WinTuple(didWin=True, score=485.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-531.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-525.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=498.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=5, nSimulations=9, listOfWinTuples=[WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-505.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-537.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=11, nSimulations=33, listOfWinTuples=[WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-542.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-525.0), WinTuple(didWin=False, score=-509.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-511.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-535.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=4, nSimulations=6, listOfWinTuples=[WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-532.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, nSimulations=5, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=False, score=-537.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=18, listOfWinTuples=[WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-505.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=12, nSimulations=15, listOfWinTuples=[WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=485.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-535.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=3, nSimulations=6, listOfWinTuples=[WinTuple(didWin=True, score=465.0), WinTuple(didWin=True, score=477.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-531.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=False, score=-517.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=3, nSimulations=7, listOfWinTuples=[WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=486.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-510.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=3, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=499.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=3, nSimulations=11, listOfWinTuples=[WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-517.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-525.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=5, listOfWinTuples=[WinTuple(didWin=False, score=-520.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-523.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=4, nSimulations=4, listOfWinTuples=[WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=498.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, nSimulations=11, listOfWinTuples=[WinTuple(didWin=False, score=-527.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-547.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-518.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-517.0), WinTuple(didWin=False, score=-542.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=2, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=503.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=4, nSimulations=5, listOfWinTuples=[WinTuple(didWin=True, score=471.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=491.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=2, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=505.0), WinTuple(didWin=True, score=497.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-517.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=92, nSimulations=379, listOfWinTuples=[WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=True, score=505.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-534.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=505.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-530.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-1004.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=471.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=478.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-524.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=479.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-525.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=505.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=505.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=True, score=505.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-543.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-525.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-522.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=True, score=505.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-501.0), WinTuple(didWin=False, score=-535.0), WinTuple(didWin=False, score=-502.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=7, nSimulations=15, listOfWinTuples=[WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=485.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-542.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=496.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, nSimulations=5, listOfWinTuples=[WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-524.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-523.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-532.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=16, nSimulations=25, listOfWinTuples=[WinTuple(didWin=True, score=485.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-522.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-511.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=8, nSimulations=11, listOfWinTuples=[WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=471.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-524.0), WinTuple(didWin=True, score=474.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=True, score=496.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=3, nSimulations=5, listOfWinTuples=[WinTuple(didWin=True, score=465.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-537.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-521.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-515.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=6, nSimulations=7, listOfWinTuples=[WinTuple(didWin=True, score=485.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=487.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=2, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-532.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=4, nSimulations=25, listOfWinTuples=[WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-524.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-1004.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-517.0), WinTuple(didWin=False, score=-528.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-507.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=477.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-517.0), WinTuple(didWin=False, score=-507.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, nSimulations=4, listOfWinTuples=[WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-513.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=3, nSimulations=4, listOfWinTuples=[WinTuple(didWin=False, score=-518.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=497.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-512.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -135, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-533.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=2, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=468.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-518.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=491.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-520.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, nSimulations=15, listOfWinTuples=[WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-1004.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-503.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=2, nSimulations=4, listOfWinTuples=[WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=486.0), WinTuple(didWin=False, score=-532.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=2, nSimulations=7, listOfWinTuples=[WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-527.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-508.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=5, nSimulations=7, listOfWinTuples=[WinTuple(didWin=True, score=485.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-525.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-518.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=477.0), WinTuple(didWin=False, score=-519.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=10, nSimulations=39, listOfWinTuples=[WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-525.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=483.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-522.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-508.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=2, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=True, score=501.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=1, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=465.0), WinTuple(didWin=False, score=-524.0), WinTuple(didWin=False, score=-523.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=6, nSimulations=6, listOfWinTuples=[WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=502.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-533.0), WinTuple(didWin=False, score=-528.0), WinTuple(didWin=False, score=-537.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=4, nSimulations=7, listOfWinTuples=[WinTuple(didWin=True, score=494.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-542.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-507.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-517.0), WinTuple(didWin=False, score=-516.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=4, listOfWinTuples=[WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-527.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-506.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=2, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=483.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=8, nSimulations=35, listOfWinTuples=[WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-524.0), WinTuple(didWin=False, score=-531.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-521.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-517.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=True, score=484.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-517.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=479.0), WinTuple(didWin=False, score=-517.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-542.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=486.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-528.0), WinTuple(didWin=False, score=-543.0), WinTuple(didWin=False, score=-509.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-512.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=2, nSimulations=10, listOfWinTuples=[WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-526.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-547.0), WinTuple(didWin=False, score=-528.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=8, nSimulations=27, listOfWinTuples=[WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=486.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-505.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=3, nSimulations=12, listOfWinTuples=[WinTuple(didWin=False, score=-534.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=478.0), WinTuple(didWin=False, score=-524.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-507.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-524.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-512.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=484.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-512.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -135, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-533.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=False, score=-537.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=8, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-524.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-542.0), WinTuple(didWin=False, score=-505.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=490.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=6, nSimulations=6, listOfWinTuples=[WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=485.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=503.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-531.0), WinTuple(didWin=False, score=-537.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=6, nSimulations=8, listOfWinTuples=[WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-525.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=479.0), WinTuple(didWin=False, score=-542.0), WinTuple(didWin=False, score=-513.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=16, nSimulations=26, listOfWinTuples=[WinTuple(didWin=True, score=505.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=505.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=505.0), WinTuple(didWin=True, score=505.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=505.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-505.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=3, nSimulations=4, listOfWinTuples=[WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=False, score=-532.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -45, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=4, nSimulations=24, listOfWinTuples=[WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=465.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=477.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-530.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-529.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-533.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-523.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=465.0), WinTuple(didWin=False, score=-531.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=452.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=493.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=487.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=2, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=479.0), WinTuple(didWin=True, score=497.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-507.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=4, listOfWinTuples=[WinTuple(didWin=False, score=-527.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-1009.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-506.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=3, nSimulations=5, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=502.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=494.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-508.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=491.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-515.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=5, nSimulations=51, listOfWinTuples=[WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-510.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-531.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=3, nSimulations=12, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-528.0), WinTuple(didWin=False, score=-528.0), WinTuple(didWin=False, score=-506.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-510.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-517.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-508.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=477.0), WinTuple(didWin=False, score=-530.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-523.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=2, nSimulations=8, listOfWinTuples=[WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=471.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-522.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=498.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-532.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=13, listOfWinTuples=[WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-1003.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-507.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-531.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-525.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=503.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, nSimulations=10, listOfWinTuples=[WinTuple(didWin=False, score=-533.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-528.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-543.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'South'): ModelEntry(nWins=8, nSimulations=16, listOfWinTuples=[WinTuple(didWin=False, score=-527.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=False, score=-529.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-505.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-518.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=465.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -135, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-533.0), WinTuple(didWin=False, score=-514.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': -135, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-517.0), WinTuple(didWin=False, score=-533.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-528.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=2, nSimulations=5, listOfWinTuples=[WinTuple(didWin=False, score=-520.0), WinTuple(didWin=True, score=471.0), WinTuple(didWin=False, score=-525.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-508.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=2, nSimulations=10, listOfWinTuples=[WinTuple(didWin=False, score=-534.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=468.0), WinTuple(didWin=False, score=-524.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-512.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=10, nSimulations=19, listOfWinTuples=[WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-525.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=4, nSimulations=9, listOfWinTuples=[WinTuple(didWin=False, score=-527.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=True, score=484.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=495.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-525.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-508.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=10, nSimulations=57, listOfWinTuples=[WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-545.0), WinTuple(didWin=False, score=-531.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-521.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-1004.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-517.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-525.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-528.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-543.0), WinTuple(didWin=False, score=-508.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=2, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=465.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-535.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=2, nSimulations=5, listOfWinTuples=[WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=False, score=-542.0), WinTuple(didWin=False, score=-512.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-507.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=4, nSimulations=23, listOfWinTuples=[WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-527.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-523.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-534.0), WinTuple(didWin=False, score=-542.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-528.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=3, nSimulations=9, listOfWinTuples=[WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-532.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-511.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=4, nSimulations=19, listOfWinTuples=[WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-508.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-545.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=488.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=1, nSimulations=6, listOfWinTuples=[WinTuple(didWin=False, score=-517.0), WinTuple(didWin=False, score=-531.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=479.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-515.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=0, nSimulations=4, listOfWinTuples=[WinTuple(didWin=False, score=-545.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-516.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-531.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-532.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=7, nSimulations=21, listOfWinTuples=[WinTuple(didWin=False, score=-517.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-533.0), WinTuple(didWin=False, score=-527.0), WinTuple(didWin=False, score=-530.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=486.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-519.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=2, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=465.0), WinTuple(didWin=True, score=477.0), WinTuple(didWin=False, score=-530.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=4, nSimulations=5, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=474.0), WinTuple(didWin=False, score=-543.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=3, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=465.0), WinTuple(didWin=True, score=479.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=3, nSimulations=6, listOfWinTuples=[WinTuple(didWin=False, score=-534.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=True, score=484.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-516.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=3, nSimulations=5, listOfWinTuples=[WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=485.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-515.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=4, listOfWinTuples=[WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-504.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=7, nSimulations=20, listOfWinTuples=[WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-533.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-505.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-506.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-508.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=3, nSimulations=6, listOfWinTuples=[WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-518.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=14, nSimulations=24, listOfWinTuples=[WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=485.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=True, score=479.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-1007.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=False, score=-528.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-508.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=2, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=485.0), WinTuple(didWin=True, score=493.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-518.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=6, listOfWinTuples=[WinTuple(didWin=False, score=-519.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-543.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-537.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=5, nSimulations=23, listOfWinTuples=[WinTuple(didWin=False, score=-527.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-510.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': -45, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-516.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=497.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, nSimulations=7, listOfWinTuples=[WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-504.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=484.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-506.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=14, nSimulations=26, listOfWinTuples=[WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-526.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=484.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=486.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=False, score=-528.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-537.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=5, listOfWinTuples=[WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=False, score=-542.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-523.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=4, nSimulations=28, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-505.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=7, nSimulations=15, listOfWinTuples=[WinTuple(didWin=True, score=485.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-508.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-506.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=498.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=477.0), WinTuple(didWin=False, score=-519.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=3, nSimulations=6, listOfWinTuples=[WinTuple(didWin=False, score=-526.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-525.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-525.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-519.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-516.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-528.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=3, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=493.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=9, listOfWinTuples=[WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=465.0), WinTuple(didWin=False, score=-529.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-509.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-547.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-542.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-514.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-511.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=9, nSimulations=9, listOfWinTuples=[WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=495.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=3, nSimulations=7, listOfWinTuples=[WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-514.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=5, nSimulations=5, listOfWinTuples=[WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=487.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-525.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-534.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-507.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-516.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-532.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-527.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-525.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=4, nSimulations=7, listOfWinTuples=[WinTuple(didWin=True, score=485.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=485.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-1007.0), WinTuple(didWin=False, score=-507.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-515.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=5, listOfWinTuples=[WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-524.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-509.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=493.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=4, nSimulations=15, listOfWinTuples=[WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-531.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-525.0), WinTuple(didWin=False, score=-522.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, nSimulations=6, listOfWinTuples=[WinTuple(didWin=False, score=-533.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-529.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=False, score=-543.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=6, nSimulations=20, listOfWinTuples=[WinTuple(didWin=False, score=-511.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-530.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-523.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-532.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=4, nSimulations=5, listOfWinTuples=[WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=501.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=5, nSimulations=8, listOfWinTuples=[WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=True, score=505.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=True, score=505.0), WinTuple(didWin=True, score=501.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=7, nSimulations=18, listOfWinTuples=[WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=False, score=-525.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-525.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=3, nSimulations=6, listOfWinTuples=[WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=True, score=478.0), WinTuple(didWin=False, score=-524.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-506.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=2, nSimulations=4, listOfWinTuples=[WinTuple(didWin=True, score=465.0), WinTuple(didWin=False, score=-524.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-512.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-516.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-523.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-515.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=477.0), WinTuple(didWin=False, score=-530.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=2, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=477.0), WinTuple(didWin=True, score=491.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=12, nSimulations=17, listOfWinTuples=[WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=484.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-532.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=6, nSimulations=12, listOfWinTuples=[WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-513.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=20, nSimulations=94, listOfWinTuples=[WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-545.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=True, score=484.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-1009.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-528.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-522.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-525.0), WinTuple(didWin=False, score=-522.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-507.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-532.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=474.0), WinTuple(didWin=False, score=-543.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': -90, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=6, nSimulations=30, listOfWinTuples=[WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=496.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-529.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-525.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-528.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-522.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-537.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=5, nSimulations=7, listOfWinTuples=[WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=479.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-512.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=7, listOfWinTuples=[WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-510.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-518.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=1, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-527.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-520.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=3, nSimulations=5, listOfWinTuples=[WinTuple(didWin=True, score=471.0), WinTuple(didWin=True, score=478.0), WinTuple(didWin=False, score=-524.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=False, score=-525.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=487.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=3, nSimulations=4, listOfWinTuples=[WinTuple(didWin=True, score=465.0), WinTuple(didWin=True, score=479.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-537.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': -45, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=2, nSimulations=11, listOfWinTuples=[WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-519.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-526.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=True, score=468.0), WinTuple(didWin=False, score=-547.0), WinTuple(didWin=False, score=-504.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=3, nSimulations=6, listOfWinTuples=[WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-526.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-510.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=5, listOfWinTuples=[WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-1009.0), WinTuple(didWin=False, score=-505.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=10, nSimulations=10, listOfWinTuples=[WinTuple(didWin=True, score=493.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=True, score=505.0), WinTuple(didWin=True, score=501.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=3, nSimulations=10, listOfWinTuples=[WinTuple(didWin=False, score=-505.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=False, score=-526.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=468.0), WinTuple(didWin=False, score=-547.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-528.0), WinTuple(didWin=False, score=-528.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': False}, 'North'): ModelEntry(nWins=2, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-519.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-515.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-519.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=10, nSimulations=22, listOfWinTuples=[WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-517.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-517.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=486.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=483.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=True, score=494.0), WinTuple(didWin=False, score=-523.0), WinTuple(didWin=False, score=-537.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, nSimulations=5, listOfWinTuples=[WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-513.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=465.0), WinTuple(didWin=False, score=-518.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=2, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=465.0), WinTuple(didWin=True, score=484.0), WinTuple(didWin=False, score=-535.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': -45, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=1, nSimulations=4, listOfWinTuples=[WinTuple(didWin=False, score=-527.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-519.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -135, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=10, nSimulations=38, listOfWinTuples=[WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-527.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-511.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=505.0), WinTuple(didWin=True, score=505.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-515.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-503.0), WinTuple(didWin=True, score=505.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=468.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=False, score=-502.0), WinTuple(didWin=False, score=-502.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=495.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-517.0), WinTuple(didWin=False, score=-511.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=0, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-545.0), WinTuple(didWin=False, score=-530.0), WinTuple(didWin=False, score=-543.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=6, nSimulations=10, listOfWinTuples=[WinTuple(didWin=True, score=495.0), WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=487.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-508.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-545.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=7, nSimulations=8, listOfWinTuples=[WinTuple(didWin=True, score=471.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-532.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=4, nSimulations=5, listOfWinTuples=[WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=493.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=8, nSimulations=8, listOfWinTuples=[WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=493.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=497.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=501.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=4, nSimulations=6, listOfWinTuples=[WinTuple(didWin=True, score=471.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=False, score=-543.0), WinTuple(didWin=True, score=497.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-507.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=497.0), WinTuple(didWin=False, score=-519.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 135, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-514.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=3, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=501.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=3, nSimulations=4, listOfWinTuples=[WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-518.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-529.0), WinTuple(didWin=True, score=488.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=495.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=False, score=-512.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=501.0), WinTuple(didWin=False, score=-512.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=8, nSimulations=8, listOfWinTuples=[WinTuple(didWin=True, score=499.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=505.0), WinTuple(didWin=True, score=505.0), WinTuple(didWin=True, score=499.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-533.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-531.0), WinTuple(didWin=False, score=-523.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=2, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=499.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=True, score=495.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-514.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=5, listOfWinTuples=[WinTuple(didWin=False, score=-523.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-505.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': -45, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=5, nSimulations=26, listOfWinTuples=[WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-526.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=True, score=484.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=492.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=True, score=486.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=False, score=-532.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-513.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=False, score=-525.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'South'): ModelEntry(nWins=3, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=484.0), WinTuple(didWin=True, score=500.0), WinTuple(didWin=True, score=490.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-545.0), WinTuple(didWin=False, score=-520.0), WinTuple(didWin=False, score=-537.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 180, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=0, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-533.0), WinTuple(didWin=False, score=-519.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=3, nSimulations=7, listOfWinTuples=[WinTuple(didWin=False, score=-525.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=True, score=488.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-522.0)])
({'directionToNearestFood': -45, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=3, listOfWinTuples=[WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=False, score=-507.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 0, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=2, nSimulations=9, listOfWinTuples=[WinTuple(didWin=True, score=492.0), WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-516.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=False, score=-506.0), WinTuple(didWin=False, score=-542.0), WinTuple(didWin=False, score=-508.0), WinTuple(didWin=False, score=-532.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'East'): ModelEntry(nWins=14, nSimulations=21, listOfWinTuples=[WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-514.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=False, score=-507.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=452.0), WinTuple(didWin=False, score=-504.0), WinTuple(didWin=False, score=-525.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=501.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=503.0), WinTuple(didWin=False, score=-513.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-543.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'East'): ModelEntry(nWins=15, nSimulations=15, listOfWinTuples=[WinTuple(didWin=True, score=496.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=498.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=490.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=504.0), WinTuple(didWin=True, score=502.0), WinTuple(didWin=True, score=496.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=False, score=-516.0), WinTuple(didWin=True, score=496.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 45, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': False, 'canMoveEast': True}, 'North'): ModelEntry(nWins=2, nSimulations=8, listOfWinTuples=[WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=True, score=491.0), WinTuple(didWin=False, score=-512.0), WinTuple(didWin=True, score=495.0), WinTuple(didWin=False, score=-518.0), WinTuple(didWin=False, score=-505.0), WinTuple(didWin=False, score=-505.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 5.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': False}, 'West'): ModelEntry(nWins=3, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=True, score=465.0), WinTuple(didWin=True, score=477.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 3.0, 'directionToNearestGhost': 0, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'West'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-518.0)])
({'directionToNearestFood': 0, 'nearestGhostEdible': None, 'distanceToNearestGhost': 4.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': False, 'canMoveWest': True, 'canMoveEast': True}, 'North'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-509.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': -45, 'canMoveNorth': False, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-527.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': None, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'South'): ModelEntry(nWins=1, nSimulations=2, listOfWinTuples=[WinTuple(didWin=True, score=477.0), WinTuple(didWin=False, score=-545.0)])
({'directionToNearestFood': 180, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': False}, 'Stop'): ModelEntry(nWins=0, nSimulations=1, listOfWinTuples=[WinTuple(didWin=False, score=-535.0)])
({'directionToNearestFood': -90, 'nearestGhostEdible': None, 'distanceToNearestGhost': 2.0, 'directionToNearestGhost': 180, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': 1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=1, listOfWinTuples=[WinTuple(didWin=True, score=500.0)])
({'directionToNearestFood': -135, 'nearestGhostEdible': None, 'distanceToNearestGhost': 1.0, 'directionToNearestGhost': -90, 'canMoveNorth': True, 'numberOfFoods': 1, 'distanceToNearestFood': -1, 'canMoveSouth': True, 'canMoveWest': True, 'canMoveEast': True}, 'Stop'): ModelEntry(nWins=1, nSimulations=3, listOfWinTuples=[WinTuple(didWin=True, score=482.0), WinTuple(didWin=False, score=-509.0), WinTuple(didWin=False, score=-507.0)])
